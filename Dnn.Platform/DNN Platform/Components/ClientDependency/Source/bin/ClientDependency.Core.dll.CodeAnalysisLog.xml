<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2017\professional\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="15.0">
 <Namespaces>
  <Namespace Name="ClientDependency.Core.Logging">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'ClientDependency.Core.Logging' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="ClientDependency.Core.Module">
   <Messages>
    <Message Id="Module" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="95" Level="Error">Rename namespace ClientDependency.Core.Module so that it no longer conflicts with the reserved language keyword 'Module'. Using a reserved keyword as the name of a namespace makes it harder for consumers in other languages to use the namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\bin\ClientDependency.Core.dll">
   <Modules>
    <Module Name="clientdependency.core.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'ClientDependency.Core.dll' with a strong name key.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithAssemblyVersion" Category="Microsoft.Design" CheckId="CA1016" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Add an AssemblyVersion attribute to 'ClientDependency.Core.dll'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'ClientDependency.Core.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="ClientDependency.Core">
       <Types>
        <Type Name="BaseLoader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RegisterClientDependencies(ClientDependency.Core.FileRegistration.Providers.BaseFileRegistrationProvider,System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyPath&gt;,System.Configuration.Provider.ProviderCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="curr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BaseLoader.cs" Line="79">In method 'BaseLoader.RegisterClientDependencies(BaseFileRegistrationProvider, IEnumerable&lt;IClientDependencyFile&gt;, IEnumerable&lt;IClientDependencyPath&gt;, ProviderCollection)', correct the spelling of 'curr' in parameter name 'currProviders' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegisterClientDependencies(System.Collections.Generic.List`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,ClientDependency.Core.IClientDependencyPath[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BaseLoader.cs" Line="132">Change 'List&lt;IClientDependencyFile&gt;' in 'BaseLoader.RegisterClientDependencies(List&lt;IClientDependencyFile&gt;, params IClientDependencyPath[])' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegisterClientDependencies(System.Collections.Generic.List`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyPath&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BaseLoader.cs" Line="148">Change 'List&lt;IClientDependencyFile&gt;' in 'BaseLoader.RegisterClientDependencies(List&lt;IClientDependencyFile&gt;, IEnumerable&lt;IClientDependencyPath&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegisterDependency(ClientDependency.Core.IClientDependencyFile,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BaseLoader.cs" Line="172">In externally visible method 'BaseLoader.RegisterDependency(IClientDependencyFile, object)', validate parameter 'file' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegisterDependency(System.Int32,System.Int32,System.String,System.String,ClientDependency.Core.ClientDependencyType,System.Object,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="provider" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BaseLoader.cs" Line="285">Parameter 'provider' of 'BaseLoader.RegisterDependency(int, int, string, string, ClientDependencyType, object, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BasicFile" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Equals(ClientDependency.Core.BasicFile)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Equals(System.String,System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BasicFile.cs" Line="68">'BasicFile.Equals(BasicFile)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Equals(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BasicFile.cs" Line="68">'BasicFile.Equals(BasicFile)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Equals(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BasicFile.cs" Line="68">In externally visible method 'BasicFile.Equals(BasicFile)', validate parameter 'other' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BasicPath" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Equals(ClientDependency.Core.BasicPath)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Equals(System.String,System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BasicPath.cs" Line="27">'BasicPath.Equals(BasicPath)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Equals(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BasicPath.cs" Line="27">'BasicPath.Equals(BasicPath)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Equals(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BasicPath.cs" Line="27">In externally visible method 'BasicPath.Equals(BasicPath)', validate parameter 'other' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BundleManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BundleManager.cs" Line="23">Initialize all static fields in 'BundleManager' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateJsBundle(System.String,ClientDependency.Core.JavascriptFile[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Js" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BundleManager.cs" Line="135">Correct the casing of 'Js' in member name 'BundleManager.CreateJsBundle(string, params JavascriptFile[])' by changing it to 'JS'.</Issue>
            </Message>
            <Message Id="Js" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BundleManager.cs" Line="135">Correct the spelling of 'Js' in member name 'BundleManager.CreateJsBundle(string, params JavascriptFile[])' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateJsBundle(System.String,System.Int32,ClientDependency.Core.JavascriptFile[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Js" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BundleManager.cs" Line="140">Correct the casing of 'Js' in member name 'BundleManager.CreateJsBundle(string, int, params JavascriptFile[])' by changing it to 'JS'.</Issue>
            </Message>
            <Message Id="Js" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BundleManager.cs" Line="140">Correct the spelling of 'Js' in member name 'BundleManager.CreateJsBundle(string, int, params JavascriptFile[])' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="priority" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BundleManager.cs" Line="140">Parameter 'priority' of 'BundleManager.CreateJsBundle(string, int, params JavascriptFile[])' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateJsBundle(System.String,System.Int32,System.Int32,ClientDependency.Core.JavascriptFile[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Js" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BundleManager.cs" Line="145">Correct the casing of 'Js' in member name 'BundleManager.CreateJsBundle(string, int, int, params JavascriptFile[])' by changing it to 'JS'.</Issue>
            </Message>
            <Message Id="Js" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BundleManager.cs" Line="145">Correct the spelling of 'Js' in member name 'BundleManager.CreateJsBundle(string, int, int, params JavascriptFile[])' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="group" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BundleManager.cs" Line="145">Parameter 'group' of 'BundleManager.CreateJsBundle(string, int, int, params JavascriptFile[])' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="priority" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BundleManager.cs" Line="145">Parameter 'priority' of 'BundleManager.CreateJsBundle(string, int, int, params JavascriptFile[])' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCssBundle(System.String)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Equals(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BundleManager.cs" Line="55">'BundleManager.GetCssBundle(string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Equals(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetJsBundle(System.String)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Equals(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="BundleManager.cs" Line="77">'BundleManager.GetJsBundle(string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Equals(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ClientDependencyAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'ClientDependencyAttribute', if possible.</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Add a public read-only property accessor for positional argument 'fileName' of Attribute 'ClientDependencyAttribute'.</Issue>
           <Issue Certainty="95" Level="Error">Add a public read-only property accessor for positional argument 'fullFilePath' of Attribute 'ClientDependencyAttribute'.</Issue>
           <Issue Name="RemoveSetter" Certainty="95" Level="Error">Remove the property setter from 'ClientDependencyAttribute.DependencyType' or reduce its accessibility because it corresponds to positional argument 'dependencyType'.</Issue>
           <Issue Name="RemoveSetter" Certainty="95" Level="Error">Remove the property setter from 'ClientDependencyAttribute.ForceBundle' or reduce its accessibility because it corresponds to positional argument 'forceBundle'.</Issue>
           <Issue Name="RemoveSetter" Certainty="95" Level="Error">Remove the property setter from 'ClientDependencyAttribute.Group' or reduce its accessibility because it corresponds to positional argument 'group'.</Issue>
           <Issue Name="RemoveSetter" Certainty="95" Level="Error">Remove the property setter from 'ClientDependencyAttribute.PathNameAlias' or reduce its accessibility because it corresponds to positional argument 'pathNameAlias'.</Issue>
           <Issue Name="RemoveSetter" Certainty="95" Level="Error">Remove the property setter from 'ClientDependencyAttribute.Priority' or reduce its accessibility because it corresponds to positional argument 'priority'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Equals(ClientDependency.Core.ClientDependencyAttribute)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Equals(System.String,System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="ClientDependencyAttribute.cs" Line="160">'ClientDependencyAttribute.Equals(ClientDependencyAttribute)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Equals(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="ClientDependencyAttribute.cs" Line="160">'ClientDependencyAttribute.Equals(ClientDependencyAttribute)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Equals(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="ClientDependencyAttribute.cs" Line="160">In externally visible method 'ClientDependencyAttribute.Equals(ClientDependencyAttribute)', validate parameter 'other' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ClientDependencyFileExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ResolveFilePath(ClientDependency.Core.IClientDependencyFile,System.Web.HttpContextBase)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="IClientDependencyFileExtensions.cs" Line="22">Method 'ClientDependencyFileExtensions.ResolveFilePath(this IClientDependencyFile, HttpContextBase)' passes 'Path' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="IClientDependencyFileExtensions.cs" Line="24">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'ClientDependencyFileExtensions.ResolveFilePath(this IClientDependencyFile, HttpContextBase)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="IClientDependencyFileExtensions.cs" Line="28">'ClientDependencyFileExtensions.ResolveFilePath(this IClientDependencyFile, HttpContextBase)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.StartsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="IClientDependencyFileExtensions.cs" Line="28">'ClientDependencyFileExtensions.ResolveFilePath(this IClientDependencyFile, HttpContextBase)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.StartsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="IClientDependencyFileExtensions.cs" Line="19">In externally visible method 'ClientDependencyFileExtensions.ResolveFilePath(this IClientDependencyFile, HttpContextBase)', validate parameter 'file' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="IClientDependencyFileExtensions.cs" Line="36">In externally visible method 'ClientDependencyFileExtensions.ResolveFilePath(this IClientDependencyFile, HttpContextBase)', validate parameter 'http' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ClientDependencyPathExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ResolvePath(ClientDependency.Core.IClientDependencyPath,System.Web.HttpContextBase)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="IClientDependencyPathExtensions.cs" Line="16">Method 'ClientDependencyPathExtensions.ResolvePath(this IClientDependencyPath, HttpContextBase)' passes 'Path' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="IClientDependencyPathExtensions.cs" Line="18">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'ClientDependencyPathExtensions.ResolvePath(this IClientDependencyPath, HttpContextBase)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="IClientDependencyPathExtensions.cs" Line="14">In externally visible method 'ClientDependencyPathExtensions.ResolvePath(this IClientDependencyPath, HttpContextBase)', validate parameter 'path' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ClientDependencyType" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Javascript" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Javascript" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error">The discrete term 'Javascript' in member name 'ClientDependencyType.Javascript' should be expressed as a compound word, 'JavaScript'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CompressionType" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#deflate" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="deflate" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'deflate' in member name 'CompressionType.deflate' by changing it to 'Deflate'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#gzip" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="gzip" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'gzip' in member name 'CompressionType.gzip' by changing it to 'Gzip'.</Issue>
            </Message>
            <Message Id="gzip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'gzip' in member name 'CompressionType.gzip' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#none" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="none" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'none' in member name 'CompressionType.none' by changing it to 'None'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ControlExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FlattenChildren(System.Web.UI.Control)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="ControlExtensions.cs" Line="16">In externally visible method 'ControlExtensions.FlattenChildren(this Control)', validate parameter 'control' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CssHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ParseImportStatements(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="CssHelper.cs" Line="22">Consider a design that does not require that 'importedPaths' be an out parameter.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="CssHelper.cs" Line="41">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'CssHelper.ParseImportStatements(string, out IEnumerable&lt;string&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="CssHelper.cs" Line="44">Because the behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings, replace this call in 'CssHelper.ParseImportStatements(string, out IEnumerable&lt;string&gt;)' with a call to 'string.EndsWith(string, StringComparison)'. If the result of 'string.EndsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="CssHelper.cs" Line="32">'CssHelper.ParseImportStatements(string, out IEnumerable&lt;string&gt;)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.StartsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="CssHelper.cs" Line="32">'CssHelper.ParseImportStatements(string, out IEnumerable&lt;string&gt;)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.StartsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="CssHelper.cs" Line="32">'CssHelper.ParseImportStatements(string, out IEnumerable&lt;string&gt;)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.StartsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReplaceUrlsWithAbsolutePaths(System.String,System.String,System.Web.HttpContextBase)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="CssHelper.cs" Line="71">Change the type of parameter 'url' of method 'CssHelper.ReplaceUrlsWithAbsolutePaths(string, string, HttpContextBase)' from string to System.Uri, or provide an overload of 'CssHelper.ReplaceUrlsWithAbsolutePaths(string, string, HttpContextBase)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReplaceUrlsWithAbsolutePaths(System.String,System.Uri)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="CssHelper.cs" Line="92">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'CssHelper.ReplaceUrlsWithAbsolutePaths(string, Uri)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="CssHelper.cs" Line="92">'CssHelper.ReplaceUrlsWithAbsolutePaths(string, Uri)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.StartsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="CssHelper.cs" Line="92">'CssHelper.ReplaceUrlsWithAbsolutePaths(string, Uri)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.StartsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="CssHelper.cs" Line="92">'CssHelper.ReplaceUrlsWithAbsolutePaths(string, Uri)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.StartsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DependencyHtmlElement" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#HtmlAttributes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="DependencyHtmlElement.cs" Line="11">Change 'DependencyHtmlElement.HtmlAttributes' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DependencySorter" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#FilterDependencies(System.Collections.Generic.IList`1&lt;ClientDependency.Core.IClientDependencyFile&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="DependencySorter.cs" Line="19">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'DependencySorter.FilterDependencies(IList&lt;IClientDependencyFile&gt;)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="DependencySorter.cs" Line="16">Replace the call to 'string.operator !=(string, string)' in 'DependencySorter.FilterDependencies(IList&lt;IClientDependencyFile&gt;)' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="DependencySorter.cs" Line="19">Replace the call to 'string.operator !=(string, string)' in 'DependencySorter.FilterDependencies(IList&lt;IClientDependencyFile&gt;)' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="DependencySorter.cs" Line="18">Replace the call to 'string.operator ==(string, string)' in 'DependencySorter.FilterDependencies(IList&lt;IClientDependencyFile&gt;)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DictionaryExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#IsEqualTo(System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="d" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="DictionaryExtensions.cs" Line="27">In method 'DictionaryExtensions.IsEqualTo(this IDictionary&lt;string, string&gt;, IDictionary&lt;string, string&gt;)', consider providing a more meaningful name than parameter name 'd'.</Issue>
            </Message>
            <Message Id="System.String.Equals(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="DictionaryExtensions.cs" Line="35">'DictionaryExtensions.IsEqualTo(this IDictionary&lt;string, string&gt;, IDictionary&lt;string, string&gt;)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Equals(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="DictionaryExtensions.cs" Line="28">In externally visible method 'DictionaryExtensions.IsEqualTo(this IDictionary&lt;string, string&gt;, IDictionary&lt;string, string&gt;)', validate parameter 'd' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="DictionaryExtensions.cs" Line="28">In externally visible method 'DictionaryExtensions.IsEqualTo(this IDictionary&lt;string, string&gt;, IDictionary&lt;string, string&gt;)', validate parameter 'compareTo' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToHtmlAttributes(System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="d" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="DictionaryExtensions.cs" Line="16">In method 'DictionaryExtensions.ToHtmlAttributes(this IDictionary&lt;string, string&gt;)', consider providing a more meaningful name than parameter name 'd'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FileWriters" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Because type 'FileWriters' contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AddWriterForExtension(System.String,ClientDependency.Core.CompositeFiles.IFileWriter)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="FileWriters.cs" Line="119">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'FileWriters.AddWriterForExtension(string, IFileWriter)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="FileWriters.cs" Line="115">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'FileWriters.AddWriterForExtension(string, IFileWriter)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddWriterForExtension(System.String,ClientDependency.Core.CompositeFiles.IVirtualFileWriter)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="FileWriters.cs" Line="55">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'FileWriters.AddWriterForExtension(string, IVirtualFileWriter)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="FileWriters.cs" Line="51">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'FileWriters.AddWriterForExtension(string, IVirtualFileWriter)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddWriterForFile(System.String,ClientDependency.Core.CompositeFiles.IFileWriter)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="FileWriters.cs" Line="151">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'FileWriters.AddWriterForFile(string, IFileWriter)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="FileWriters.cs" Line="147">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'FileWriters.AddWriterForFile(string, IFileWriter)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddWriterForFile(System.String,ClientDependency.Core.CompositeFiles.IVirtualFileWriter)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="FileWriters.cs" Line="87">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'FileWriters.AddWriterForFile(string, IVirtualFileWriter)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="FileWriters.cs" Line="83">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'FileWriters.AddWriterForFile(string, IVirtualFileWriter)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDefault()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="FileWriters.cs" Line="27">Change 'FileWriters.GetDefault()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRegisteredExtensions()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="FileWriters.cs" Line="37">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'FileWriters.GetRegisteredExtensions()' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="FileWriters.cs" Line="38">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'FileWriters.GetRegisteredExtensions()' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetVirtualWriterForExtension(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="FileWriters.cs" Line="68">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'FileWriters.GetVirtualWriterForExtension(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetVirtualWriterForFile(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="FileWriters.cs" Line="100">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'FileWriters.GetVirtualWriterForFile(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWriterForExtension(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="FileWriters.cs" Line="132">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'FileWriters.GetWriterForExtension(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWriterForFile(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="FileWriters.cs" Line="164">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'FileWriters.GetWriterForFile(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HttpContextBaseExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddCompressionResponseHeader(System.Web.HttpContextBase,ClientDependency.Core.CompressionType)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="c" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="HttpContextBaseExtensions.cs" Line="36">In method 'HttpContextBaseExtensions.AddCompressionResponseHeader(this HttpContextBase, CompressionType)', correct the spelling of 'c' in parameter name 'cType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="HttpContextBaseExtensions.cs" Line="39">In externally visible method 'HttpContextBaseExtensions.AddCompressionResponseHeader(this HttpContextBase, CompressionType)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetClientCompression(System.Web.HttpContextBase)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="HttpContextBaseExtensions.cs" Line="108">In externally visible method 'HttpContextBaseExtensions.GetClientCompression(this HttpContextBase)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsAbsolute(System.Web.HttpContextBase,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IsAbsolute" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="HttpContextBaseExtensions.cs" Line="152">Correct the spelling of the unrecognized token 'IsAbsolute' in the literal '"IsAbsolute method will check if a Virtual path is absolute, it is not supported ..."'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsAbsolutePath(System.Web.HttpContextBase,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="context" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="HttpContextBaseExtensions.cs" Line="217">Parameter 'context' of 'HttpContextBaseExtensions.IsAbsolutePath(this HttpContextBase, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="HttpContextBaseExtensions.cs" Line="219">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'HttpContextBaseExtensions.IsAbsolutePath(this HttpContextBase, string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="HttpContextBaseExtensions.cs" Line="220">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'HttpContextBaseExtensions.IsAbsolutePath(this HttpContextBase, string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="HttpContextBaseExtensions.cs" Line="217">Change the type of parameter 'originalUrl' of method 'HttpContextBaseExtensions.IsAbsolutePath(this HttpContextBase, string)' from string to System.Uri, or provide an overload of 'HttpContextBaseExtensions.IsAbsolutePath(this HttpContextBase, string)', that allows 'originalUrl' to be passed as a System.Uri object.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="HttpContextBaseExtensions.cs" Line="219">In externally visible method 'HttpContextBaseExtensions.IsAbsolutePath(this HttpContextBase, string)', validate parameter 'originalUrl' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResolveUrl(System.Web.HttpContextBase,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="HttpContextBaseExtensions.cs" Line="182">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'HttpContextBaseExtensions.ResolveUrl(this HttpContextBase, string)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="HttpContextBaseExtensions.cs" Line="173">Change the type of parameter 'originalUrl' of method 'HttpContextBaseExtensions.ResolveUrl(this HttpContextBase, string)' from string to System.Uri, or provide an overload of 'HttpContextBaseExtensions.ResolveUrl(this HttpContextBase, string)', that allows 'originalUrl' to be passed as a System.Uri object.</Issue>
            </Message>
            <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="HttpContextBaseExtensions.cs" Line="173">Change the return type of 'HttpContextBaseExtensions.ResolveUrl(this HttpContextBase, string)' from string to System.Uri.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="HttpContextBaseExtensions.cs" Line="194">In externally visible method 'HttpContextBaseExtensions.ResolveUrl(this HttpContextBase, string)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetClientCachingResponse(System.Web.HttpContextBase,System.String,System.Int32,System.String[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="HttpContextBaseExtensions.cs" Line="59">Replace method 'HttpContextBaseExtensions.SetClientCachingResponse(this HttpContextBase, string, int, string[])' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Params" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="HttpContextBaseExtensions.cs" Line="59">In method 'HttpContextBaseExtensions.SetClientCachingResponse(this HttpContextBase, string, int, string[])', correct the spelling of 'Params' in parameter name 'varyByParams' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="etag" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="HttpContextBaseExtensions.cs" Line="59">In method 'HttpContextBaseExtensions.SetClientCachingResponse(this HttpContextBase, string, int, string[])', correct the spelling of 'etag' in parameter name 'etag' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="HttpContextBaseExtensions.cs" Line="62">In externally visible method 'HttpContextBaseExtensions.SetClientCachingResponse(this HttpContextBase, string, int, string[])', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="JavascriptFile" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Javascript" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeCompoundWord" Certainty="80" Level="Error">The discrete term 'Javascript' in type name 'JavascriptFile' should be expressed as a compound word, 'JavaScript'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="NetworkHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Because type 'NetworkHelper' contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#MachineName" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_MachineName()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="NetworkHelper.cs" Line="51">Modify 'NetworkHelper.MachineName.get()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
              </Message>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="NetworkHelper.cs" Line="60">'NetworkHelper.MachineName.get()' creates an exception of type 'ApplicationException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
              <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
               <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="NetworkHelper.cs" Line="60">'NetworkHelper.MachineName.get()' creates an exception of type 'ApplicationException', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="ObjectExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ToDictionary(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="o" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="ObjectExtensions.cs" Line="10">In method 'ObjectExtensions.ToDictionary(this object)', consider providing a more meaningful name than parameter name 'o'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PathsCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'PathsCollection' so that it does not end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AddPath(System.String,System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="PathsCollection.cs" Line="16">Replace method 'PathsCollection.AddPath(string, string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PhysicalFileReader" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#ReadFile(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="IFileReader.cs" Line="51">Modify 'PhysicalFileReader.ReadFile(string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="IFileReader.cs" Line="53">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'PhysicalFileReader.ReadFile(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RequestHelper" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#GetXmlResponse(System.Uri)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="RequestHelper.cs" Line="140">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'RequestHelper.GetXmlResponse(Uri)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryReadUri(System.String,System.Web.HttpContextBase,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String&amp;,System.Uri&amp;)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="RequestHelper.cs" Line="56">In method 'RequestHelper.TryReadUri(string, HttpContextBase, IEnumerable&lt;string&gt;, out string, out Uri)', call System.IDisposable.Dispose on object 'sw' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="RequestHelper.cs" Line="65">Modify 'RequestHelper.TryReadUri(string, HttpContextBase, IEnumerable&lt;string&gt;, out string, out Uri)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="RequestHelper.cs" Line="114">Modify 'RequestHelper.TryReadUri(string, HttpContextBase, IEnumerable&lt;string&gt;, out string, out Uri)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.IO.StringWriter.#ctor" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="RequestHelper.cs" Line="56">Because the behavior of 'StringWriter.StringWriter()' could vary based on the current user's locale settings, replace this call in 'RequestHelper.TryReadUri(string, HttpContextBase, IEnumerable&lt;string&gt;, out string, out Uri)' with a call to 'StringWriter.StringWriter(IFormatProvider)'. If the result of 'StringWriter.StringWriter(IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="RequestHelper.cs" Line="110">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RequestHelper.TryReadUri(string, HttpContextBase, IEnumerable&lt;string&gt;, out string, out Uri)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="RequestHelper.cs" Line="67">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'RequestHelper.TryReadUri(string, HttpContextBase, IEnumerable&lt;string&gt;, out string, out Uri)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="RequestHelper.cs" Line="95">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'RequestHelper.TryReadUri(string, HttpContextBase, IEnumerable&lt;string&gt;, out string, out Uri)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="RequestHelper.cs" Line="116">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'RequestHelper.TryReadUri(string, HttpContextBase, IEnumerable&lt;string&gt;, out string, out Uri)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="RequestHelper.cs" Line="97">Because the behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings, replace this call in 'RequestHelper.TryReadUri(string, HttpContextBase, IEnumerable&lt;string&gt;, out string, out Uri)' with a call to 'string.EndsWith(string, StringComparison)'. If the result of 'string.EndsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="System.String.EndsWith(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="RequestHelper.cs" Line="54">'RequestHelper.TryReadUri(string, HttpContextBase, IEnumerable&lt;string&gt;, out string, out Uri)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.EndsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="RequestHelper.cs" Line="75">'RequestHelper.TryReadUri(string, HttpContextBase, IEnumerable&lt;string&gt;, out string, out Uri)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.StartsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SimpleCompressor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Because type 'SimpleCompressor' contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CompressBytes(ClientDependency.Core.CompressionType,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="SimpleCompressor.cs" Line="33">Object 'ms' can be disposed more than once in method 'SimpleCompressor.CompressBytes(CompressionType, byte[])'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 33, 38</Issue>
            </Message>
            <Message Id="bytes" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="SimpleCompressor.cs" Line="13">In member 'SimpleCompressor.CompressBytes(CompressionType, byte[])', consider replacing the data type identifier 'Bytes' in parameter name 'fileBytes' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="SimpleCompressor.cs" Line="30">In externally visible method 'SimpleCompressor.CompressBytes(CompressionType, byte[])', validate parameter 'fileBytes' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DecompressBytes(ClientDependency.Core.CompressionType,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="SimpleCompressor.cs" Line="63">Object 'ms' can be disposed more than once in method 'SimpleCompressor.DecompressBytes(CompressionType, byte[])'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 63, 68</Issue>
            </Message>
            <Message Id="bytes" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="SimpleCompressor.cs" Line="43">In member 'SimpleCompressor.DecompressBytes(CompressionType, byte[])', consider replacing the data type identifier 'Bytes' in parameter name 'compressedBytes' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="SimpleCompressor.cs" Line="60">In externally visible method 'SimpleCompressor.DecompressBytes(CompressionType, byte[])', validate parameter 'compressedBytes' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StringExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DecodeFrom64Url(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="67">Change the return type of 'StringExtensions.DecodeFrom64Url(this string)' from string to System.Uri.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="70">In externally visible method 'StringExtensions.DecodeFrom64Url(this string)', validate parameter 'toDecode' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EncodeTo64Url(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="46">Change the return type of 'StringExtensions.EncodeTo64Url(this string)' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EndsWithOneOf(System.String,System.String[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="str" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="137">In method 'StringExtensions.EndsWithOneOf(this string, string[])', correct the spelling of 'str' in parameter name 'str' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="138">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'StringExtensions.EndsWithOneOf(this string, string[])' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="142">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'StringExtensions.EndsWithOneOf(this string, string[])' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="142">Because the behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings, replace this call in 'StringExtensions.EndsWithOneOf(this string, string[])' with a call to 'string.EndsWith(string, StringComparison)'. If the result of 'string.EndsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="138">In externally visible method 'StringExtensions.EndsWithOneOf(this string, string[])', validate parameter 'str' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="140">In externally visible method 'StringExtensions.EndsWithOneOf(this string, string[])', validate parameter 'ext' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateHash(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="98">Modify 'StringExtensions.GenerateHash(this string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="str" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="91">In method 'StringExtensions.GenerateHash(this string)', correct the spelling of 'str' in parameter name 'str' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateMd5(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Md" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="122">Correct the casing of 'Md' in member name 'StringExtensions.GenerateMd5(this string)' by changing it to 'MD'.</Issue>
            </Message>
            <Message Id="Md" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="122">Correct the spelling of 'Md' in member name 'StringExtensions.GenerateMd5(this string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="str" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="122">In method 'StringExtensions.GenerateMd5(this string)', correct the spelling of 'str' in parameter name 'str' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.Byte.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="126">Because the behavior of 'byte.ToString(string)' could vary based on the current user's locale settings, replace this call in 'StringExtensions.GenerateMd5(this string)' with a call to 'byte.ToString(string, IFormatProvider)'. If the result of 'byte.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateSha256Hash(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="111">Correct the spelling of 'Sha' in member name 'StringExtensions.GenerateSha256Hash(this string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="str" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="111">In method 'StringExtensions.GenerateSha256Hash(this string)', correct the spelling of 'str' in parameter name 'str' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.Byte.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="115">Because the behavior of 'byte.ToString(string)' could vary based on the current user's locale settings, replace this call in 'StringExtensions.GenerateSha256Hash(this string)' with a call to 'byte.ToString(string, IFormatProvider)'. If the result of 'byte.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReplaceFirst(System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="37">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'StringExtensions.ReplaceFirst(this string, string, string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="37">In externally visible method 'StringExtensions.ReplaceFirst(this string, string, string)', validate parameter 'text' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="42">In externally visible method 'StringExtensions.ReplaceFirst(this string, string, string)', validate parameter 'search' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReverseString(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="29">In method 'StringExtensions.ReverseString(this string)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="StringExtensions.cs" Line="30">In externally visible method 'StringExtensions.ReverseString(this string)', validate parameter 's' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UriExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#IsLocalUri(System.Uri,System.Web.HttpContextBase)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="UriExtensions.cs" Line="68">In externally visible method 'UriExtensions.IsLocalUri(this Uri, HttpContextBase)', validate parameter 'uri' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="UriExtensions.cs" Line="60">In externally visible method 'UriExtensions.IsLocalUri(this Uri, HttpContextBase)', validate parameter 'http' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsWebUri(System.Uri)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Equals(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="UriExtensions.cs" Line="16">'UriExtensions.IsWebUri(this Uri)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Equals(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="UriExtensions.cs" Line="16">'UriExtensions.IsWebUri(this Uri)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Equals(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="UriExtensions.cs" Line="16">In externally visible method 'UriExtensions.IsWebUri(this Uri)', validate parameter 'uri' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MakeAbsoluteUri(System.Uri,System.Web.HttpContextBase)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="UriExtensions.cs" Line="40">In externally visible method 'UriExtensions.MakeAbsoluteUri(this Uri, HttpContextBase)', validate parameter 'uri' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="UriExtensions.cs" Line="42">In externally visible method 'UriExtensions.MakeAbsoluteUri(this Uri, HttpContextBase)', validate parameter 'http' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToAbsolutePath(System.Uri,System.String)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="UriExtensions.cs" Line="24">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'UriExtensions.ToAbsolutePath(this Uri, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="UriExtensions.cs" Line="24">'UriExtensions.ToAbsolutePath(this Uri, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.StartsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="UriExtensions.cs" Line="24">'UriExtensions.ToAbsolutePath(this Uri, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.StartsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="UriExtensions.cs" Line="24">'UriExtensions.ToAbsolutePath(this Uri, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.StartsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VirtualPathFileReader" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#ReadFile(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="IFileReader.cs" Line="28">Object 'file.Open()' can be disposed more than once in method 'VirtualPathFileReader.ReadFile(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 28</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source" File="IFileReader.cs" Line="28">Object 'reader' can be disposed more than once in method 'VirtualPathFileReader.ReadFile(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 28</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ClientDependency.Core.CompositeFiles">
       <Types>
        <Type Name="CompositeDependencyHandler" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetCombinedFiles(System.Web.HttpContextBase,System.String,ClientDependency.Core.ClientDependencyType,System.Collections.Generic.List`1&lt;ClientDependency.Core.CompositeFiles.CompositeFileDefinition&gt;&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="CompositeDependencyHandler.cs" Line="217">The 'this' parameter (or 'Me' in Visual Basic) of 'CompositeDependencyHandler.GetCombinedFiles(HttpContextBase, string, ClientDependencyType, out List&lt;CompositeFileDefinition&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MaxHandlerUrlLength" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'CompositeDependencyHandler.MaxHandlerUrlLength' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProcessFromFile(System.Web.HttpContextBase,ClientDependency.Core.CompositeFiles.CompositeFileMap,System.String&amp;,System.Byte[]&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="CompositeDependencyHandler.cs" Line="225">The 'this' parameter (or 'Me' in Visual Basic) of 'CompositeDependencyHandler.ProcessFromFile(HttpContextBase, CompositeFileMap, out string, out byte[])' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProcessRequestInternal(System.Web.HttpContextBase,System.String,ClientDependency.Core.ClientDependencyType,System.Int32,System.Byte[],ClientDependency.Core.CompositeFiles.CompositeDependencyHandler+OutputCachedPage)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="CompositeDependencyHandler.cs" Line="131">'CompositeDependencyHandler.ProcessRequestInternal(HttpContextBase, string, ClientDependencyType, int, byte[], CompositeDependencyHandler.OutputCachedPage)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="CompositeDependencyHandler.cs" Line="133">'CompositeDependencyHandler.ProcessRequestInternal(HttpContextBase, string, ClientDependencyType, int, byte[], CompositeDependencyHandler.OutputCachedPage)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="CompositeUrlType" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="CompositeDependencyHandler.cs" Line="167">Correct the spelling of the unrecognized token 'CompositeUrlType' in the literal '" ,CompositeUrlType.MappedId requires that a map is found"'.</Issue>
            </Message>
            <Message Id="MappedId" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="CompositeDependencyHandler.cs" Line="167">Correct the spelling of the unrecognized token 'MappedId' in the literal '" ,CompositeUrlType.MappedId requires that a map is found"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetCaching(System.Web.HttpContextBase,System.String,System.String,ClientDependency.Core.CompressionType,ClientDependency.Core.CompositeFiles.CompositeDependencyHandler+OutputCachedPage)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="CompositeDependencyHandler.cs" Line="242">The 'this' parameter (or 'Me' in Visual Basic) of 'CompositeDependencyHandler.SetCaching(HttpContextBase, string, string, CompressionType, CompositeDependencyHandler.OutputCachedPage)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.Web.IHttpHandler.IsReusable" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#System.Web.IHttpHandler.get_IsReusable()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
             <Messages>
              <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="CompositeDependencyHandler.cs" Line="36">Make 'CompositeDependencyHandler' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'IHttpHandler.IsReusable.get()' and is visible to derived classes.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="CompositeDependencyHandler.cs" Line="91">In method 'CompositeDependencyHandler.IHttpHandler.ProcessRequest(HttpContext)', object 'page' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'page' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="CompositeDependencyHandler.cs" Line="40">Make 'CompositeDependencyHandler' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'IHttpHandler.ProcessRequest(HttpContext)' and is visible to derived classes.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="CompositeDependencyHandler.cs" Line="113">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'CompositeDependencyHandler.IHttpHandler.ProcessRequest(HttpContext)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="CompositeDependencyHandler.cs" Line="108">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'CompositeDependencyHandler.IHttpHandler.ProcessRequest(HttpContext)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="CompositeDependencyHandler.cs" Line="47">In externally visible method 'CompositeDependencyHandler.IHttpHandler.ProcessRequest(HttpContext)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CompositeFileDefinition" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="CompositeFileDefinition.cs" Line="18">Change the type of parameter 'uri' of method 'CompositeFileDefinition.CompositeFileDefinition(string, bool)' from string to System.Uri, or provide an overload of 'CompositeFileDefinition.CompositeFileDefinition(string, bool)', that allows 'uri' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Equals(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="CompositeFileDefinition.cs" Line="28">'obj', a parameter, is cast to type 'CompositeFileDefinition' multiple times in method 'CompositeFileDefinition.Equals(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="CompositeFileDefinition.cs" Line="28">In externally visible method 'CompositeFileDefinition.Equals(object)', validate parameter 'obj' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Uri" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="CompositeFileDefinition.cs" Line="24">Change the type of property 'CompositeFileDefinition.Uri' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CompositeFileMap" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetCompositeFileBytes()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="CompositeFileMap.cs" Line="66">Modify 'CompositeFileMap.GetCompositeFileBytes()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DefaultFileWriter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#WriteContentToStream(ClientDependency.Core.CompositeFiles.Providers.BaseCompositeFileProcessingProvider,System.IO.StreamWriter,System.String,ClientDependency.Core.ClientDependencyType,System.Web.HttpContextBase,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="DefaultFileWriter.cs" Line="42">In method 'DefaultFileWriter.WriteContentToStream(BaseCompositeFileProcessingProvider, StreamWriter, string, ClientDependencyType, HttpContextBase, string)', correct the spelling of 'sw' in parameter name 'sw' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="5#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="DefaultFileWriter.cs" Line="42">Change the type of parameter 'originalUrl' of method 'DefaultFileWriter.WriteContentToStream(BaseCompositeFileProcessingProvider, StreamWriter, string, ClientDependencyType, HttpContextBase, string)' from string to System.Uri, or provide an overload of 'DefaultFileWriter.WriteContentToStream(BaseCompositeFileProcessingProvider, StreamWriter, string, ClientDependencyType, HttpContextBase, string)', that allows 'originalUrl' to be passed as a System.Uri object.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="DefaultFileWriter.cs" Line="54">In externally visible method 'DefaultFileWriter.WriteContentToStream(BaseCompositeFileProcessingProvider, StreamWriter, string, ClientDependencyType, HttpContextBase, string)', validate parameter 'provider' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="DefaultFileWriter.cs" Line="61">In externally visible method 'DefaultFileWriter.WriteContentToStream(BaseCompositeFileProcessingProvider, StreamWriter, string, ClientDependencyType, HttpContextBase, string)', validate parameter 'sw' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteToStream(ClientDependency.Core.CompositeFiles.Providers.BaseCompositeFileProcessingProvider,System.IO.StreamWriter,System.IO.FileInfo,ClientDependency.Core.ClientDependencyType,System.String,System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="DefaultFileWriter.cs" Line="25">Modify 'DefaultFileWriter.WriteToStream(BaseCompositeFileProcessingProvider, StreamWriter, FileInfo, ClientDependencyType, string, HttpContextBase)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="DefaultFileWriter.cs" Line="27">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'DefaultFileWriter.WriteToStream(BaseCompositeFileProcessingProvider, StreamWriter, FileInfo, ClientDependencyType, string, HttpContextBase)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="DefaultFileWriter.cs" Line="21">In externally visible method 'DefaultFileWriter.WriteToStream(BaseCompositeFileProcessingProvider, StreamWriter, FileInfo, ClientDependencyType, string, HttpContextBase)', validate parameter 'fi' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IFileWriter" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#WriteToStream(ClientDependency.Core.CompositeFiles.Providers.BaseCompositeFileProcessingProvider,System.IO.StreamWriter,System.IO.FileInfo,ClientDependency.Core.ClientDependencyType,System.String,System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="orig" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'IFileWriter.WriteToStream(BaseCompositeFileProcessingProvider, StreamWriter, FileInfo, ClientDependencyType, string, HttpContextBase)', correct the spelling of 'orig' in parameter name 'origUrl' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'IFileWriter.WriteToStream(BaseCompositeFileProcessingProvider, StreamWriter, FileInfo, ClientDependencyType, string, HttpContextBase)', correct the spelling of 'sw' in parameter name 'sw' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="4#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error">Change the type of parameter 'origUrl' of method 'IFileWriter.WriteToStream(BaseCompositeFileProcessingProvider, StreamWriter, FileInfo, ClientDependencyType, string, HttpContextBase)' from string to System.Uri, or provide an overload of 'IFileWriter.WriteToStream(BaseCompositeFileProcessingProvider, StreamWriter, FileInfo, ClientDependencyType, string, HttpContextBase)', that allows 'origUrl' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IVirtualFileWriter" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#WriteToStream(ClientDependency.Core.CompositeFiles.Providers.BaseCompositeFileProcessingProvider,System.IO.StreamWriter,ClientDependency.Core.CompositeFiles.IVirtualFile,ClientDependency.Core.ClientDependencyType,System.String,System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="orig" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'IVirtualFileWriter.WriteToStream(BaseCompositeFileProcessingProvider, StreamWriter, IVirtualFile, ClientDependencyType, string, HttpContextBase)', correct the spelling of 'orig' in parameter name 'origUrl' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'IVirtualFileWriter.WriteToStream(BaseCompositeFileProcessingProvider, StreamWriter, IVirtualFile, ClientDependencyType, string, HttpContextBase)', correct the spelling of 'sw' in parameter name 'sw' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="vf" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'IVirtualFileWriter.WriteToStream(BaseCompositeFileProcessingProvider, StreamWriter, IVirtualFile, ClientDependencyType, string, HttpContextBase)', correct the spelling of 'vf' in parameter name 'vf' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="4#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error">Change the type of parameter 'origUrl' of method 'IVirtualFileWriter.WriteToStream(BaseCompositeFileProcessingProvider, StreamWriter, IVirtualFile, ClientDependencyType, string, HttpContextBase)' from string to System.Uri, or provide an overload of 'IVirtualFileWriter.WriteToStream(BaseCompositeFileProcessingProvider, StreamWriter, IVirtualFile, ClientDependencyType, string, HttpContextBase)', that allows 'origUrl' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="JSMin" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#action(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="JSMin.cs" Line="150">'JSMin.action(int)' has a cyclomatic complexity of 48. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="JSMin.cs" Line="183">'JSMin.action(int)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="JSMin.cs" Line="223">'JSMin.action(int)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="JSMin.cs" Line="233">'JSMin.action(int)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="JSMin.cs" Line="244">'JSMin.action(int)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="JSMin.cs" Line="183">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'JSMin.action(int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="JSMin.cs" Line="223">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'JSMin.action(int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="JSMin.cs" Line="233">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'JSMin.action(int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="JSMin.cs" Line="244">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'JSMin.action(int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#isAlphanum(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="JSMin.cs" Line="360">The 'this' parameter (or 'Me' in Visual Basic) of 'JSMin.isAlphanum(int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#jsmin()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="JSMin.cs" Line="74">'JSMin.jsmin()' has a cyclomatic complexity of 29. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Minify(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="JSMin.cs" Line="56">In method 'JSMin.Minify(string)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.IO.StringWriter.#ctor(System.Text.StringBuilder)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="JSMin.cs" Line="60">Because the behavior of 'StringWriter.StringWriter(StringBuilder)' could vary based on the current user's locale settings, replace this call in 'JSMin.Minify(string)' with a call to 'StringWriter.StringWriter(StringBuilder, IFormatProvider)'. If the result of 'StringWriter.StringWriter(StringBuilder, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#next()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles" File="JSMin.cs" Line="311">'JSMin.next()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ClientDependency.Core.CompositeFiles.Providers">
       <Types>
        <Type Name="BaseCompositeFileProcessingProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BundleDomains" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="82">Change 'BaseCompositeFileProcessingProvider.BundleDomains' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CanProcessLocally(System.Web.HttpContextBase,System.String,ClientDependency.Core.CompositeFiles.IVirtualFileWriter&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="100">Consider a design that does not require that 'virtualFileWriter' be an out parameter.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="100">The 'this' parameter (or 'Me' in Visual Basic) of 'BaseCompositeFileProcessingProvider.CanProcessLocally(HttpContextBase, string, out IVirtualFileWriter)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="116">In externally visible method 'BaseCompositeFileProcessingProvider.CanProcessLocally(HttpContextBase, string, out IVirtualFileWriter)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CombineFiles(System.String[],System.Web.HttpContextBase,ClientDependency.Core.ClientDependencyType,System.Collections.Generic.List`1&lt;ClientDependency.Core.CompositeFiles.CompositeFileDefinition&gt;&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="3#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'fileDefs' be an out parameter.</Issue>
            </Message>
            <Message Id="Defs" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'BaseCompositeFileProcessingProvider.CombineFiles(string[], HttpContextBase, ClientDependencyType, out List&lt;CompositeFileDefinition&gt;)', correct the spelling of 'Defs' in parameter name 'fileDefs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CompressBytes(ClientDependency.Core.CompressionType,System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="bytes" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error">In member 'BaseCompositeFileProcessingProvider.CompressBytes(CompressionType, byte[])', consider replacing the data type identifier 'Bytes' in parameter name 'fileBytes' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnableJsMinify" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Js" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="53">Correct the casing of 'Js' in member name 'BaseCompositeFileProcessingProvider.EnableJsMinify' by changing it to 'JS'.</Issue>
            </Message>
            <Message Id="Js" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="53">Correct the spelling of 'Js' in member name 'BaseCompositeFileProcessingProvider.EnableJsMinify' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCompositeFileUrl(System.String,ClientDependency.Core.ClientDependencyType,System.Web.HttpContextBase,ClientDependency.Core.CompositeFiles.Providers.CompositeUrlType,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="484">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'BaseCompositeFileProcessingProvider.GetCompositeFileUrl(string, ClientDependencyType, HttpContextBase, CompositeUrlType, string, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="480">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'BaseCompositeFileProcessingProvider.GetCompositeFileUrl(string, ClientDependencyType, HttpContextBase, CompositeUrlType, string, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="471">Change the return type of 'BaseCompositeFileProcessingProvider.GetCompositeFileUrl(string, ClientDependencyType, HttpContextBase, CompositeUrlType, string, int)' from string to System.Uri.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="480">In externally visible method 'BaseCompositeFileProcessingProvider.GetCompositeFileUrl(string, ClientDependencyType, HttpContextBase, CompositeUrlType, string, int)', validate parameter 'http' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCompositeFileUrls(ClientDependency.Core.ClientDependencyType,ClientDependency.Core.IClientDependencyFile[],System.String,System.Web.HttpContextBase,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="CompositeDependencyHandler" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="354">Correct the spelling of the unrecognized token 'CompositeDependencyHandler' in the literal '"), either reduce the single dependency\'s path length or increase the CompositeD..."'.</Issue>
            </Message>
            <Message Id="MaxHandlerUrlLength" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="354">Correct the spelling of the unrecognized token 'MaxHandlerUrlLength' in the literal '"), either reduce the single dependency\'s path length or increase the CompositeD..."'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Initialize(System.String,System.Collections.Specialized.NameValueCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="567">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'BaseCompositeFileProcessingProvider.Initialize(string, NameValueCollection)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Initialize(System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="90">In externally visible method 'BaseCompositeFileProcessingProvider.Initialize(HttpContextBase)', validate parameter 'http' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseCssFilePaths(System.String,ClientDependency.Core.ClientDependencyType,System.String,System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="602">Change the type of parameter 'url' of method 'BaseCompositeFileProcessingProvider.ParseCssFilePaths(string, ClientDependencyType, string, HttpContextBase)' from string to System.Uri, or provide an overload of 'BaseCompositeFileProcessingProvider.ParseCssFilePaths(string, ClientDependencyType, string, HttpContextBase)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PathBasedUrlFormat" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="71">Change the type of property 'BaseCompositeFileProcessingProvider.PathBasedUrlFormat' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UrlTypeDefault" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'BaseCompositeFileProcessingProvider.UrlTypeDefault' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteFileToStream(System.IO.StreamWriter,System.IO.FileInfo,ClientDependency.Core.ClientDependencyType,System.String,System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="orig" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="253">In method 'BaseCompositeFileProcessingProvider.WriteFileToStream(StreamWriter, FileInfo, ClientDependencyType, string, HttpContextBase)', correct the spelling of 'orig' in parameter name 'origUrl' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="253">In method 'BaseCompositeFileProcessingProvider.WriteFileToStream(StreamWriter, FileInfo, ClientDependencyType, string, HttpContextBase)', correct the spelling of 'sw' in parameter name 'sw' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="3#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="253">Change the type of parameter 'origUrl' of method 'BaseCompositeFileProcessingProvider.WriteFileToStream(StreamWriter, FileInfo, ClientDependencyType, string, HttpContextBase)' from string to System.Uri, or provide an overload of 'BaseCompositeFileProcessingProvider.WriteFileToStream(StreamWriter, FileInfo, ClientDependencyType, string, HttpContextBase)', that allows 'origUrl' to be passed as a System.Uri object.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="259">In externally visible method 'BaseCompositeFileProcessingProvider.WriteFileToStream(StreamWriter, FileInfo, ClientDependencyType, string, HttpContextBase)', validate parameter 'fi' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteFileToStream(System.IO.StreamWriter,System.String,ClientDependency.Core.ClientDependencyType,System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="sw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="233">In method 'BaseCompositeFileProcessingProvider.WriteFileToStream(StreamWriter, string, ClientDependencyType, HttpContextBase)', correct the spelling of 'sw' in parameter name 'sw' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="233">Change the type of parameter 'url' of method 'BaseCompositeFileProcessingProvider.WriteFileToStream(StreamWriter, string, ClientDependencyType, HttpContextBase)' from string to System.Uri, or provide an overload of 'BaseCompositeFileProcessingProvider.WriteFileToStream(StreamWriter, string, ClientDependencyType, HttpContextBase)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WritePathToStream(ClientDependency.Core.ClientDependencyType,System.String,System.Web.HttpContextBase,System.IO.StreamWriter)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="179">Modify 'BaseCompositeFileProcessingProvider.WritePathToStream(ClientDependencyType, string, HttpContextBase, StreamWriter)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="200">Modify 'BaseCompositeFileProcessingProvider.WritePathToStream(ClientDependencyType, string, HttpContextBase, StreamWriter)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="sw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="136">In method 'BaseCompositeFileProcessingProvider.WritePathToStream(ClientDependencyType, string, HttpContextBase, StreamWriter)', correct the spelling of 'sw' in parameter name 'sw' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="150">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'BaseCompositeFileProcessingProvider.WritePathToStream(ClientDependencyType, string, HttpContextBase, StreamWriter)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="202">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'BaseCompositeFileProcessingProvider.WritePathToStream(ClientDependencyType, string, HttpContextBase, StreamWriter)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="212">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'BaseCompositeFileProcessingProvider.WritePathToStream(ClientDependencyType, string, HttpContextBase, StreamWriter)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="163">In externally visible method 'BaseCompositeFileProcessingProvider.WritePathToStream(ClientDependencyType, string, HttpContextBase, StreamWriter)', validate parameter 'context' before using it.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="219">In externally visible method 'BaseCompositeFileProcessingProvider.WritePathToStream(ClientDependencyType, string, HttpContextBase, StreamWriter)', validate parameter 'sw' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteVirtualFileToStream(System.IO.StreamWriter,ClientDependency.Core.CompositeFiles.IVirtualFile,ClientDependency.Core.CompositeFiles.IVirtualFileWriter,ClientDependency.Core.ClientDependencyType,System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="sw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="276">In method 'BaseCompositeFileProcessingProvider.WriteVirtualFileToStream(StreamWriter, IVirtualFile, IVirtualFileWriter, ClientDependencyType, HttpContextBase)', correct the spelling of 'sw' in parameter name 'sw' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="vf" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="BaseCompositeFileProcessingProvider.cs" Line="276">In method 'BaseCompositeFileProcessingProvider.WriteVirtualFileToStream(StreamWriter, IVirtualFile, IVirtualFileWriter, ClientDependencyType, HttpContextBase)', correct the spelling of 'vf' in parameter name 'vf' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CompositeFileProcessingProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CombineFiles(System.String[],System.Web.HttpContextBase,ClientDependency.Core.ClientDependencyType,System.Collections.Generic.List`1&lt;ClientDependency.Core.CompositeFiles.CompositeFileDefinition&gt;&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="CompositeFileProcessingProvider.cs" Line="83">Object 'ms' can be disposed more than once in method 'CompositeFileProcessingProvider.CombineFiles(string[], HttpContextBase, ClientDependencyType, out List&lt;CompositeFileDefinition&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 83</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveCompositeFile(System.Byte[],ClientDependency.Core.ClientDependencyType,System.Web.HttpServerUtilityBase)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="CompositeFileProcessingProvider.cs" Line="59">Object 'fs' can be disposed more than once in method 'CompositeFileProcessingProvider.SaveCompositeFile(byte[], ClientDependencyType, HttpServerUtilityBase)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 59</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="CompositeFileProcessingProvider.cs" Line="47">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'CompositeFileProcessingProvider.SaveCompositeFile(byte[], ClientDependencyType, HttpServerUtilityBase)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="CompositeFileProcessingProvider.cs" Line="57">In externally visible method 'CompositeFileProcessingProvider.SaveCompositeFile(byte[], ClientDependencyType, HttpServerUtilityBase)', validate parameter 'fileContents' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteFileToStream(System.IO.StreamWriter&amp;,System.IO.FileInfo,ClientDependency.Core.ClientDependencyType,System.String,System.Collections.Generic.List`1&lt;ClientDependency.Core.CompositeFiles.CompositeFileDefinition&gt;&amp;,System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="4" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Name="Reassigned" Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="CompositeFileProcessingProvider.cs" Line="131">In externally visible method 'CompositeFileProcessingProvider.WriteFileToStream(ref StreamWriter, FileInfo, ClientDependencyType, string, ref List&lt;CompositeFileDefinition&gt;, HttpContextBase)', validate local variable ''(*fileDefs)'', which was reassigned from parameter 'fileDefs', before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteFileToStream(System.IO.StreamWriter&amp;,System.String,ClientDependency.Core.ClientDependencyType,System.Collections.Generic.List`1&lt;ClientDependency.Core.CompositeFiles.CompositeFileDefinition&gt;&amp;,System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Name="Reassigned" Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="CompositeFileProcessingProvider.cs" Line="111">In externally visible method 'CompositeFileProcessingProvider.WriteFileToStream(ref StreamWriter, string, ClientDependencyType, ref List&lt;CompositeFileDefinition&gt;, HttpContextBase)', validate local variable ''(*fileDefs)'', which was reassigned from parameter 'fileDefs', before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CompositeFileProcessingProviderCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
           <Issue Certainty="90" Level="Error">'CompositeFileProcessingProviderCollection' appears to be a non-generic, strongly typed collection. Add an implementation to the instance of ICollection&lt;T&gt; where T is the underlying element type of 'CompositeFileProcessingProviderCollection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FileMapProviderCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
           <Issue Certainty="90" Level="Error">'FileMapProviderCollection' appears to be a non-generic, strongly typed collection. Add an implementation to the instance of ICollection&lt;T&gt; where T is the underlying element type of 'FileMapProviderCollection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="PathBasedUrlFormatter" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#CreatePath(System.String,System.String,ClientDependency.Core.ClientDependencyType,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="85">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'PathBasedUrlFormatter.CreatePath(string, string, ClientDependencyType, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Parse(System.String,System.String,System.String&amp;,ClientDependency.Core.ClientDependencyType&amp;,System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="25">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'PathBasedUrlFormatter.Parse(string, string, out string, out ClientDependencyType, out int)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="42">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'PathBasedUrlFormatter.Parse(string, string, out string, out ClientDependencyType, out int)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="16">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'PathBasedUrlFormatter.Parse(string, string, out string, out ClientDependencyType, out int)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="17">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'PathBasedUrlFormatter.Parse(string, string, out string, out ClientDependencyType, out int)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="System.String.LastIndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="21">Because the behavior of 'string.LastIndexOf(string)' could vary based on the current user's locale settings, replace this call in 'PathBasedUrlFormatter.Parse(string, string, out string, out ClientDependencyType, out int)' with a call to 'string.LastIndexOf(string, StringComparison)'. If the result of 'string.LastIndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="29">Because the behavior of 'string.LastIndexOf(string)' could vary based on the current user's locale settings, replace this call in 'PathBasedUrlFormatter.Parse(string, string, out string, out ClientDependencyType, out int)' with a call to 'string.LastIndexOf(string, StringComparison)'. If the result of 'string.LastIndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="30">Because the behavior of 'string.LastIndexOf(string)' could vary based on the current user's locale settings, replace this call in 'PathBasedUrlFormatter.Parse(string, string, out string, out ClientDependencyType, out int)' with a call to 'string.LastIndexOf(string, StringComparison)'. If the result of 'string.LastIndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="30">Because the behavior of 'string.LastIndexOf(string)' could vary based on the current user's locale settings, replace this call in 'PathBasedUrlFormatter.Parse(string, string, out string, out ClientDependencyType, out int)' with a call to 'string.LastIndexOf(string, StringComparison)'. If the result of 'string.LastIndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="38">Because the behavior of 'string.LastIndexOf(string)' could vary based on the current user's locale settings, replace this call in 'PathBasedUrlFormatter.Parse(string, string, out string, out ClientDependencyType, out int)' with a call to 'string.LastIndexOf(string, StringComparison)'. If the result of 'string.LastIndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="38">Because the behavior of 'string.LastIndexOf(string)' could vary based on the current user's locale settings, replace this call in 'PathBasedUrlFormatter.Parse(string, string, out string, out ClientDependencyType, out int)' with a call to 'string.LastIndexOf(string, StringComparison)'. If the result of 'string.LastIndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Validate(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="dependencyId" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="118">Correct the spelling of the unrecognized token 'dependencyId' in the literal '"The ordering of the tokens in the pathUrlFormat must be in the order: dependency..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="130">Correct the spelling of the unrecognized token 'dependencyId' in the literal '"The pathUrlFormat must start with the {dependencyId} token"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="143">Correct the spelling of the unrecognized token 'dependencyId' in the literal '"The {dependencyId} and {version} tokens must be seperated by a valid character"'.</Issue>
            </Message>
            <Message Id="pathUrlFormat" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="118">Correct the spelling of the unrecognized token 'pathUrlFormat' in the literal '"The ordering of the tokens in the pathUrlFormat must be in the order: dependency..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="126">Correct the spelling of the unrecognized token 'pathUrlFormat' in the literal '"The pathUrlFormat must end with the {type} token"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="130">Correct the spelling of the unrecognized token 'pathUrlFormat' in the literal '"The pathUrlFormat must start with the {dependencyId} token"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="106">Correct the spelling of the unrecognized token 'pathUrlFormat' in the literal '"The value specified for pathUrlFormat cannot be null or empty"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="134">Correct the spelling of the unrecognized token 'pathUrlFormat' in the literal '"The value specified for pathUrlFormat contains a \'{\' character outside of the ..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="138">Correct the spelling of the unrecognized token 'pathUrlFormat' in the literal '"The value specified for pathUrlFormat contains a \'}\' character outside of the ..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="122">Correct the spelling of the unrecognized token 'pathUrlFormat' in the literal '"The value specified for pathUrlFormat does not contain an "'.</Issue>
            </Message>
            <Message Id="seperated" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="143">Correct the spelling of the unrecognized token 'seperated' in the literal '"The {dependencyId} and {version} tokens must be seperated by a valid character"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="147">Correct the spelling of the unrecognized token 'seperated' in the literal '"The {version} and {type} tokens must be seperated by a valid character"'.</Issue>
            </Message>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="124">Because the behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings, replace this call in 'PathBasedUrlFormatter.Validate(string)' with a call to 'string.EndsWith(string, StringComparison)'. If the result of 'string.EndsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="115">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'PathBasedUrlFormatter.Validate(string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="PathBasedUrlFormatter.cs" Line="128">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'PathBasedUrlFormatter.Validate(string)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="XmlFileMapper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateFileNode(System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyFile&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="XmlFileMapper.cs" Line="299">The 'this' parameter (or 'Me' in Visual Basic) of 'XmlFileMapper.CreateFileNode(IEnumerable&lt;IClientDependencyFile&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateNewMap(System.Web.HttpContextBase,System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="XmlFileMapper.cs" Line="177">In externally visible method 'XmlFileMapper.CreateNewMap(HttpContextBase, IEnumerable&lt;IClientDependencyFile&gt;, int)', validate parameter 'dependentFiles' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FileMapVirtualFolder" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'XmlFileMapper.FileMapVirtualFolder' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindItem(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="XmlFileMapper.cs" Line="293">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'XmlFileMapper.FindItem(string, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindItem(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="XmlFileMapper.cs" Line="277">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'XmlFileMapper.FindItem(string, int, string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCompositeFile(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="XmlFileMapper.cs" Line="115">Modify 'XmlFileMapper.GetCompositeFile(string, int, string)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="XmlFileMapper.cs" Line="108">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'XmlFileMapper.GetCompositeFile(string, int, string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDependentFiles(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="XmlFileMapper.cs" Line="145">Modify 'XmlFileMapper.GetDependentFiles(string, int)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\CompositeFiles\Providers" File="XmlFileMapper.cs" Line="136">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'XmlFileMapper.GetDependentFiles(string, int)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ClientDependency.Core.Config">
       <Types>
        <Type Name="ClientDependencySection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AllowOnlyFipsAlgorithms" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="ClientDependencySection.cs" Line="121">The 'this' parameter (or 'Me' in Visual Basic) of 'ClientDependencySection.AllowOnlyFipsAlgorithms' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_AllowOnlyFipsAlgorithms(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="value" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
               <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="ClientDependencySection.cs" Line="123">Parameter 'value' of 'ClientDependencySection.AllowOnlyFipsAlgorithms.set(bool)' is never used. Remove the parameter or use it in the method body.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#FileBasedDepdendenyExtensions" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Depdendeny" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="ClientDependencySection.cs" Line="110">Correct the spelling of 'Depdendeny' in member name 'ClientDependencySection.FileBasedDepdendenyExtensions' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FileBasedDependencyExtensionList" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_FileBasedDependencyExtensionList()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
               <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="ClientDependencySection.cs" Line="145">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ClientDependencySection.FileBasedDependencyExtensionList.get()' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Filters" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Filters()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
               <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="ClientDependencySection.cs" Line="85">'obj', a variable, is cast to type 'ConfigurationElementCollection' multiple times in method 'ClientDependencySection.Filters.get()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#MvcElement" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Mvc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="ClientDependencySection.cs" Line="57">Correct the spelling of 'Mvc' in member name 'ClientDependencySection.MvcElement' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ClientDependencySettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="ClientDependencySettings" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="ClientDependencySettings.cs" Line="32">Correct the spelling of the unrecognized token 'ClientDependencySettings' in the literal '"HttpContext.Current must exist when using the empty constructor for ClientDepend..."'.</Issue>
            </Message>
            <Message Id="HttpContext" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="ClientDependencySettings.cs" Line="32">Correct the spelling of the unrecognized token 'HttpContext' in the literal '"HttpContext.Current must exist when using the empty constructor for ClientDepend..."'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AllowOnlyFipsAlgorithms" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Fips" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="ClientDependencySettings.cs" Line="175">Correct the spelling of 'Fips' in member name 'ClientDependencySettings.AllowOnlyFipsAlgorithms' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DefaultMvcRenderer" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Mvc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="ClientDependencySettings.cs" Line="213">Correct the spelling of 'Mvc' in member name 'ClientDependencySettings.DefaultMvcRenderer' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FileBasedDependencyExtensionList" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="ClientDependencySettings.cs" Line="137">Change 'ClientDependencySettings.FileBasedDependencyExtensionList' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="ClientDependencySettings.cs" Line="137">Change 'List&lt;string&gt;' in 'ClientDependencySettings.FileBasedDependencyExtensionList' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_FileBasedDependencyExtensionList()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
               <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="ClientDependencySettings.cs" Line="155">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ClientDependencySettings.FileBasedDependencyExtensionList.get()' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_FileBasedDependencyExtensionList(System.Collections.Generic.List`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
               <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="ClientDependencySettings.cs" Line="163">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ClientDependencySettings.FileBasedDependencyExtensionList.set(List&lt;string&gt;)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#LoadProviders(System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="mvc" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="ClientDependencySettings.cs" Line="305">Correct the spelling of the unrecognized token 'mvc' in the literal '"Unable to load default mvc renderer"'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="ClientDependencySettings.cs" Line="266">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'ClientDependencySettings.LoadProviders(HttpContextBase)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MvcRendererCollection" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Mvc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="ClientDependencySettings.cs" Line="218">Correct the spelling of 'Mvc' in member name 'ClientDependencySettings.MvcRendererCollection' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DnnConfiguration" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Dnn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Dnn' in type name 'DnnConfiguration'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="DnnConfiguration.cs" Line="40">Modify 'DnnConfiguration.DnnConfiguration()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="DnnConfiguration.cs" Line="14">Initialize all static fields in 'DnnConfiguration' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnableCssMinification()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Minification" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="DnnConfiguration.cs" Line="70">Correct the spelling of 'Minification' in member name 'DnnConfiguration.EnableCssMinification()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnableJsMinification()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Js" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="DnnConfiguration.cs" Line="75">Correct the casing of 'Js' in member name 'DnnConfiguration.EnableJsMinification()' by changing it to 'JS'.</Issue>
            </Message>
            <Message Id="Js" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="DnnConfiguration.cs" Line="75">Correct the spelling of 'Js' in member name 'DnnConfiguration.EnableJsMinification()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Minification" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="DnnConfiguration.cs" Line="75">Correct the spelling of 'Minification' in member name 'DnnConfiguration.EnableJsMinification()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHostSettingThroughReflection(System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="DnnConfiguration.cs" Line="225">Modify 'DnnConfiguration.GetHostSettingThroughReflection(string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPortalIdThroughReflection()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="DnnConfiguration.cs" Line="205">Modify 'DnnConfiguration.GetPortalIdThroughReflection()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPortalSettingThroughReflection(System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="DnnConfiguration.cs" Line="180">Modify 'DnnConfiguration.GetPortalSettingThroughReflection(string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetStatusByReflection()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="DnnConfiguration.cs" Line="256">Modify 'DnnConfiguration.GetStatusByReflection()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="DnnConfiguration.cs" Line="249">The 'this' parameter (or 'Me' in Visual Basic) of 'DnnConfiguration.GetStatusByReflection()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetVersion()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="DnnConfiguration.cs" Line="46">The 'this' parameter (or 'Me' in Visual Basic) of 'DnnConfiguration.GetVersion()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="DnnConfiguration.cs" Line="46">Change 'DnnConfiguration.GetVersion()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MinifyJsKey" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Js" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Js' in member name 'DnnConfiguration.MinifyJsKey' by changing it to 'JS'.</Issue>
            </Message>
            <Message Id="Js" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Js' in member name 'DnnConfiguration.MinifyJsKey' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FileRegistrationSection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FileBasedDependencyExtensionList" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_FileBasedDependencyExtensionList()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
               <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Config" File="FileRegistrationSection.cs" Line="46">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'FileRegistrationSection.FileBasedDependencyExtensionList.get()' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="MimeTypeCompressionCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
           <Issue Certainty="90" Level="Error">'MimeTypeCompressionCollection' appears to be a non-generic, strongly typed collection. Add an implementation to the instance of ICollection&lt;T&gt; where T is the underlying element type of 'MimeTypeCompressionCollection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MvcSection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Mvc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Mvc' in type name 'MvcSection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="RogueFileCompressionCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
           <Issue Certainty="90" Level="Error">'RogueFileCompressionCollection' appears to be a non-generic, strongly typed collection. Add an implementation to the instance of ICollection&lt;T&gt; where T is the underlying element type of 'RogueFileCompressionCollection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="RogueFileCompressionExcludeCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
           <Issue Certainty="90" Level="Error">'RogueFileCompressionExcludeCollection' appears to be a non-generic, strongly typed collection. Add an implementation to the instance of ICollection&lt;T&gt; where T is the underlying element type of 'RogueFileCompressionExcludeCollection'.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ClientDependency.Core.Controls">
       <Types>
        <Type Name="ClientDependencyInclude" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(ClientDependency.Core.IClientDependencyFile)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyInclude.cs" Line="23">In externally visible method 'ClientDependencyInclude.ClientDependencyInclude(IClientDependencyFile)', validate parameter 'file' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Equals(ClientDependency.Core.Controls.ClientDependencyInclude)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Equals(System.String,System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyInclude.cs" Line="90">'ClientDependencyInclude.Equals(ClientDependencyInclude)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Equals(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyInclude.cs" Line="90">'ClientDependencyInclude.Equals(ClientDependencyInclude)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Equals(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyInclude.cs" Line="90">In externally visible method 'ClientDependencyInclude.Equals(ClientDependencyInclude)', validate parameter 'other' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPreRender(System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Reserved" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyInclude.cs" Line="74">'ClientDependencyInclude.OnPreRender(EventArgs)' creates an exception of type 'NullReferenceException', an exception type that is reserved by the runtime and should never be raised by managed code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Render(System.Web.UI.HtmlTextWriter)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyInclude.cs" Line="82">In externally visible method 'ClientDependencyInclude.Render(HtmlTextWriter)', validate parameter 'writer' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ClientDependencyLoader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetInstance(System.Web.HttpContextBase)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ctx" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyLoader.cs" Line="96">In method 'ClientDependencyLoader.GetInstance(HttpContextBase)', correct the spelling of 'ctx' in parameter name 'ctx' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyLoader.cs" Line="97">In externally visible method 'ClientDependencyLoader.GetInstance(HttpContextBase)', validate parameter 'ctx' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnInit(System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ClientDependencyLoader" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyLoader.cs" Line="49">Correct the spelling of the unrecognized token 'ClientDependencyLoader' in the literal '"ClientDependencyLoader only works with Page based handlers."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyLoader.cs" Line="63">Correct the spelling of the unrecognized token 'ClientDependencyLoader' in the literal '"ClientDependencyLoader requires an HttpContext"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyLoader.cs" Line="58">Correct the spelling of the unrecognized token 'ClientDependencyLoader' in the literal '"Only one ClientDependencyLoader may exist on a page"'.</Issue>
            </Message>
            <Message Id="HttpContext" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyLoader.cs" Line="63">Correct the spelling of the unrecognized token 'HttpContext' in the literal '"ClientDependencyLoader requires an HttpContext"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Paths" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyLoader.cs" Line="150">Change 'ClientDependencyPathCollection' in 'ClientDependencyLoader.Paths' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegisterClientDependencies(ClientDependency.Core.FileRegistration.Providers.WebFormsFileRegistrationProvider,System.Web.UI.Control,System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyPath&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyLoader.cs" Line="322">Consider changing the type of parameter 'provider' in 'ClientDependencyLoader.RegisterClientDependencies(WebFormsFileRegistrationProvider, Control, IEnumerable&lt;IClientDependencyPath&gt;)' from 'WebFormsFileRegistrationProvider' to its base type 'BaseFileRegistrationProvider'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegisterClientDependencies(System.Web.UI.Control,ClientDependency.Core.Controls.ClientDependencyPathCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyLoader.cs" Line="290">Change 'ClientDependencyPathCollection' in 'ClientDependencyLoader.RegisterClientDependencies(Control, ClientDependencyPathCollection)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegisterClientDependencies`1(System.Web.UI.Control,System.Collections.Generic.List`1&lt;ClientDependency.Core.IClientDependencyPath&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyLoader.cs" Line="310">Change 'List&lt;IClientDependencyPath&gt;' in 'ClientDependencyLoader.RegisterClientDependencies&lt;T&gt;(Control, List&lt;IClientDependencyPath&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyLoader.cs" Line="310">Consider a design where 'ClientDependencyLoader.RegisterClientDependencies&lt;T&gt;(Control, List&lt;IClientDependencyPath&gt;)' doesn't require explicit type parameter 'T' in any call to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryCreate(System.Web.UI.Control,System.Web.HttpContextBase,System.Boolean&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyLoader.cs" Line="164">Consider a design that does not require that 'isNew' be an out parameter.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyLoader.cs" Line="168">In externally visible method 'ClientDependencyLoader.TryCreate(Control, HttpContextBase, out bool)', validate parameter 'parent' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ClientDependencyPath" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Equals(ClientDependency.Core.Controls.ClientDependencyPath)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Equals(System.String,System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyPath.cs" Line="62">'ClientDependencyPath.Equals(ClientDependencyPath)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Equals(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyPath.cs" Line="62">'ClientDependencyPath.Equals(ClientDependencyPath)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Equals(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyPath.cs" Line="62">In externally visible method 'ClientDependencyPath.Equals(ClientDependencyPath)', validate parameter 'other' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResolvedPath" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_ResolvedPath()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyPath.cs" Line="55">'ClientDependencyPath.ResolvedPath.get()' creates an exception of type 'ArgumentNullException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
              <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
               <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="ClientDependencyPath.cs" Line="55">Method 'ClientDependencyPath.ResolvedPath.get()' passes 'Path has not been set' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="CssInclude" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CssMedia" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_CssMedia(ClientDependency.Core.CssMediaType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
               <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="CssInclude.cs" Line="42">In method 'CssInclude.CssMedia.set(CssMediaType)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="DependencyFolderInclude" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#OnLoad(System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="DependencyFolderInclude.cs" Line="55">In method 'DependencyFolderInclude.OnLoad(EventArgs)', object 'new CssInclude()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new CssInclude()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="DependencyFolderInclude.cs" Line="48">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'DependencyFolderInclude.OnLoad(EventArgs)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HtmlInclude" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="HtmlInclude.cs" Line="18">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HtmlInclude.HtmlInclude()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="HtmlInclude.cs" Line="19">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HtmlInclude.HtmlInclude()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegisterIncludes(System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.BasicFile&gt;,ClientDependency.Core.Controls.ClientDependencyLoader,ClientDependency.Core.ClientDependencyType)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Controls" File="HtmlInclude.cs" Line="51">The 'this' parameter (or 'Me' in Visual Basic) of 'HtmlInclude.RegisterIncludes(IEnumerable&lt;BasicFile&gt;, ClientDependencyLoader, ClientDependencyType)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="JsFolderInclude" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Js" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'Js' in type name 'JsFolderInclude' by changing it to 'JS'.</Issue>
          </Message>
          <Message Id="Js" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Js' in type name 'JsFolderInclude'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="JsInclude" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Js" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'Js' in type name 'JsInclude' by changing it to 'JS'.</Issue>
          </Message>
          <Message Id="Js" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Js' in type name 'JsInclude'.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ClientDependency.Core.FileRegistration.Providers">
       <Types>
        <Type Name="BaseFileRegistrationProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="80">'BaseFileRegistrationProvider.BaseFileRegistrationProvider()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;BaseFileRegistrationProvider..ctor()&#xD;&#xA;BaseFileRegistrationProvider.set_EnableCompositeFiles(Boolean):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AppendVersion(System.String,System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="355">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'BaseFileRegistrationProvider.AppendVersion(string, HttpContextBase)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="355">Because the behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings, replace this call in 'BaseFileRegistrationProvider.AppendVersion(string, HttpContextBase)' with a call to 'string.EndsWith(string, StringComparison)'. If the result of 'string.EndsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnsureNoDuplicates(System.Collections.Generic.List`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Collections.Generic.HashSet`1&lt;ClientDependency.Core.IClientDependencyPath&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="291">Change 'List&lt;IClientDependencyFile&gt;' in 'BaseFileRegistrationProvider.EnsureNoDuplicates(List&lt;IClientDependencyFile&gt;, HashSet&lt;IClientDependencyPath&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="297">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'BaseFileRegistrationProvider.EnsureNoDuplicates(List&lt;IClientDependencyFile&gt;, HashSet&lt;IClientDependencyPath&gt;)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="297">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'BaseFileRegistrationProvider.EnsureNoDuplicates(List&lt;IClientDependencyFile&gt;, HashSet&lt;IClientDependencyPath&gt;)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="301">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'BaseFileRegistrationProvider.EnsureNoDuplicates(List&lt;IClientDependencyFile&gt;, HashSet&lt;IClientDependencyPath&gt;)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="301">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'BaseFileRegistrationProvider.EnsureNoDuplicates(List&lt;IClientDependencyFile&gt;, HashSet&lt;IClientDependencyPath&gt;)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="294">In externally visible method 'BaseFileRegistrationProvider.EnsureNoDuplicates(List&lt;IClientDependencyFile&gt;, HashSet&lt;IClientDependencyPath&gt;)', validate parameter 'dependencies' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCompositeFileHandlerPath(System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="FamilyOrAssembly" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="94">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'BaseFileRegistrationProvider.GetCompositeFileHandlerPath(HttpContextBase)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="96">In externally visible method 'BaseFileRegistrationProvider.GetCompositeFileHandlerPath(HttpContextBase)', validate parameter 'http' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHtmlAttributes(ClientDependency.Core.IClientDependencyFile)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="NoArguments" Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="407">Call the 'ArgumentOutOfRangeException' constructor that contains a message and/or paramName parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderJsDependencies(System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Web.HttpContextBase,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Js" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Js' in member name 'BaseFileRegistrationProvider.RenderJsDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;)' by changing it to 'JS'.</Issue>
            </Message>
            <Message Id="Js" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Js' in member name 'BaseFileRegistrationProvider.RenderJsDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="js" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'BaseFileRegistrationProvider.RenderJsDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;)', correct the spelling of 'js' in parameter name 'jsDependencies' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderSingleJsFile(System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Js" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Js' in member name 'BaseFileRegistrationProvider.RenderSingleJsFile(string, IDictionary&lt;string, string&gt;)' by changing it to 'JS'.</Issue>
            </Message>
            <Message Id="Js" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Js' in member name 'BaseFileRegistrationProvider.RenderSingleJsFile(string, IDictionary&lt;string, string&gt;)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="js" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'BaseFileRegistrationProvider.RenderSingleJsFile(string, IDictionary&lt;string, string&gt;)', correct the spelling of 'js' in parameter name 'js' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StaggerOnDifferentAttributes(System.Web.HttpContextBase,System.Text.StringBuilder,System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Func`4&lt;System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Web.HttpContextBase,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;,System.String&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="134">The 'this' parameter (or 'Me' in Visual Basic) of 'BaseFileRegistrationProvider.StaggerOnDifferentAttributes(HttpContextBase, StringBuilder, IEnumerable&lt;IClientDependencyFile&gt;, Func&lt;IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;, string&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateFilePaths(System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Collections.Generic.HashSet`1&lt;ClientDependency.Core.IClientDependencyPath&gt;,System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Reserved" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="258">'BaseFileRegistrationProvider.UpdateFilePaths(IEnumerable&lt;IClientDependencyFile&gt;, HashSet&lt;IClientDependencyPath&gt;, HttpContextBase)' creates an exception of type 'NullReferenceException', an exception type that is reserved by the runtime and should never be raised by managed code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="ClientDependencyPathCollection" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="258">Correct the spelling of the unrecognized token 'ClientDependencyPathCollection' in the literal '" does not exist in the ClientDependencyPathCollection"'.</Issue>
            </Message>
            <Message Id="PathNameAlias" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="258">Correct the spelling of the unrecognized token 'PathNameAlias' in the literal '"The PathNameAlias specified for dependency "'.</Issue>
            </Message>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="261">Because the behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings, replace this call in 'BaseFileRegistrationProvider.UpdateFilePaths(IEnumerable&lt;IClientDependencyFile&gt;, HashSet&lt;IClientDependencyPath&gt;, HttpContextBase)' with a call to 'string.EndsWith(string, StringComparison)'. If the result of 'string.EndsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="250">In externally visible method 'BaseFileRegistrationProvider.UpdateFilePaths(IEnumerable&lt;IClientDependencyFile&gt;, HashSet&lt;IClientDependencyPath&gt;, HttpContextBase)', validate parameter 'dependencies' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="271">In externally visible method 'BaseFileRegistrationProvider.UpdateFilePaths(IEnumerable&lt;IClientDependencyFile&gt;, HashSet&lt;IClientDependencyPath&gt;, HttpContextBase)', validate parameter 'http' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteStaggeredDependencies(System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Web.HttpContextBase,System.Text.StringBuilder,System.Func`4&lt;System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Web.HttpContextBase,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;,System.String&gt;,System.Func`3&lt;System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="176">Consider a design where 'BaseFileRegistrationProvider.WriteStaggeredDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, StringBuilder, Func&lt;IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;, string&gt;, Func&lt;string, IDictionary&lt;string, string&gt;, string&gt;)' doesn't nest generic type 'Func&lt;IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;, string&gt;'.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="176">Consider a design where 'BaseFileRegistrationProvider.WriteStaggeredDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, StringBuilder, Func&lt;IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;, string&gt;, Func&lt;string, IDictionary&lt;string, string&gt;, string&gt;)' doesn't nest generic type 'Func&lt;string, IDictionary&lt;string, string&gt;, string&gt;'.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="190">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'BaseFileRegistrationProvider.WriteStaggeredDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, StringBuilder, Func&lt;IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;, string&gt;, Func&lt;string, IDictionary&lt;string, string&gt;, string&gt;)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="195">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'BaseFileRegistrationProvider.WriteStaggeredDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, StringBuilder, Func&lt;IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;, string&gt;, Func&lt;string, IDictionary&lt;string, string&gt;, string&gt;)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="182">In externally visible method 'BaseFileRegistrationProvider.WriteStaggeredDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, StringBuilder, Func&lt;IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;, string&gt;, Func&lt;string, IDictionary&lt;string, string&gt;, string&gt;)', validate parameter 'dependencies' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="197">In externally visible method 'BaseFileRegistrationProvider.WriteStaggeredDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, StringBuilder, Func&lt;IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;, string&gt;, Func&lt;string, IDictionary&lt;string, string&gt;, string&gt;)', validate parameter 'http' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="223">In externally visible method 'BaseFileRegistrationProvider.WriteStaggeredDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, StringBuilder, Func&lt;IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;, string&gt;, Func&lt;string, IDictionary&lt;string, string&gt;, string&gt;)', validate parameter 'builder' before using it.</Issue>
            </Message>
            <Message Id="4" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseFileRegistrationProvider.cs" Line="223">In externally visible method 'BaseFileRegistrationProvider.WriteStaggeredDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, StringBuilder, Func&lt;IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;, string&gt;, Func&lt;string, IDictionary&lt;string, string&gt;, string&gt;)', validate parameter 'renderSingle' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BaseRenderer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RegisterDependencies(System.Collections.Generic.List`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Collections.Generic.HashSet`1&lt;ClientDependency.Core.IClientDependencyPath&gt;,System.String&amp;,System.String&amp;,System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseRenderer.cs" Line="21">Consider a design that does not require that 'jsOutput' be an out parameter.</Issue>
            </Message>
            <Message Id="3#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseRenderer.cs" Line="21">Consider a design that does not require that 'cssOutput' be an out parameter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseRenderer.cs" Line="21">Change 'List&lt;IClientDependencyFile&gt;' in 'BaseRenderer.RegisterDependencies(List&lt;IClientDependencyFile&gt;, HashSet&lt;IClientDependencyPath&gt;, out string, out string, HttpContextBase)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="js" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="BaseRenderer.cs" Line="21">In method 'BaseRenderer.RegisterDependencies(List&lt;IClientDependencyFile&gt;, HashSet&lt;IClientDependencyPath&gt;, out string, out string, HttpContextBase)', correct the spelling of 'js' in parameter name 'jsOutput' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FileRegistrationProviderCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
           <Issue Certainty="90" Level="Error">'FileRegistrationProviderCollection' appears to be a non-generic, strongly typed collection. Add an implementation to the instance of ICollection&lt;T&gt; where T is the underlying element type of 'FileRegistrationProviderCollection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="HtmlEmbedContants" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Contants" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Contants' in type name 'HtmlEmbedContants'.</Issue>
          </Message>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Because type 'HtmlEmbedContants' contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="LazyLoadProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RegisterDependencies(System.Web.HttpContextBase,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="HttpHandler" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadProvider.cs" Line="117">Correct the spelling of the unrecognized token 'HttpHandler' in the literal '"The current HttpHandler in a WebFormsFileRegistrationProvider must be of type Pa..."'.</Issue>
            </Message>
            <Message Id="WebFormsFileRegistrationProvider" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadProvider.cs" Line="117">Correct the spelling of the unrecognized token 'WebFormsFileRegistrationProvider' in the literal '"The current HttpHandler in a WebFormsFileRegistrationProvider must be of type Pa..."'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadProvider.cs" Line="115">In externally visible method 'LazyLoadProvider.RegisterDependencies(HttpContextBase, string, string)', validate parameter 'http' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegisterScript(System.String,System.Web.UI.Page)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="runat" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadProvider.cs" Line="134">Correct the spelling of the unrecognized token 'runat' in the literal '"A form tag must be present on the page with a runat=\'server\' attribute specifi..."'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadProvider.cs" Line="135">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'LazyLoadProvider.RegisterScript(string, Page)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadProvider.cs" Line="139">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'LazyLoadProvider.RegisterScript(string, Page)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderCssDependencies(System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Web.HttpContextBase,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadProvider.cs" Line="81">In externally visible method 'LazyLoadProvider.RenderCssDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;)', validate parameter 'http' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderJsDependencies(System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Web.HttpContextBase,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadProvider.cs" Line="41">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'LazyLoadProvider.RenderJsDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadProvider.cs" Line="54">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'LazyLoadProvider.RenderJsDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadProvider.cs" Line="37">In externally visible method 'LazyLoadProvider.RenderJsDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;)', validate parameter 'http' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderSingleJsFile(System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadProvider.cs" Line="64">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'LazyLoadProvider.RenderSingleJsFile(string, IDictionary&lt;string, string&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadProvider.cs" Line="63">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'LazyLoadProvider.RenderSingleJsFile(string, IDictionary&lt;string, string&gt;)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadProvider.cs" Line="63">In externally visible method 'LazyLoadProvider.RenderSingleJsFile(string, IDictionary&lt;string, string&gt;)', validate parameter 'js' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LazyLoadRenderer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetWebResourceUrl(System.Type,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadRenderer.cs" Line="97">In method 'LazyLoadRenderer.GetWebResourceUrl(Type, string)', call System.IDisposable.Dispose on object 'page' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Locker" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'LazyLoadRenderer.Locker' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PlaceholdersReplaced(System.Object,ClientDependency.Core.PlaceholdersReplacedEventArgs)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadRenderer.cs" Line="57">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'LazyLoadRenderer.PlaceholdersReplaced(object, PlaceholdersReplacedEventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderCssDependencies(System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Web.HttpContextBase,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadRenderer.cs" Line="191">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'LazyLoadRenderer.RenderCssDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadRenderer.cs" Line="166">In externally visible method 'LazyLoadRenderer.RenderCssDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;)', validate parameter 'http' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderJsDependencies(System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Web.HttpContextBase,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadRenderer.cs" Line="144">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'LazyLoadRenderer.RenderJsDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadRenderer.cs" Line="119">In externally visible method 'LazyLoadRenderer.RenderJsDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;)', validate parameter 'http' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderSingleCssFile(System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadRenderer.cs" Line="214">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'LazyLoadRenderer.RenderSingleCssFile(string, IDictionary&lt;string, string&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderSingleJsFile(System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadRenderer.cs" Line="199">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'LazyLoadRenderer.RenderSingleJsFile(string, IDictionary&lt;string, string&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadRenderer.cs" Line="205">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'LazyLoadRenderer.RenderSingleJsFile(string, IDictionary&lt;string, string&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadRenderer.cs" Line="198">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'LazyLoadRenderer.RenderSingleJsFile(string, IDictionary&lt;string, string&gt;)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LazyLoadRenderer.cs" Line="198">In externally visible method 'LazyLoadRenderer.RenderSingleJsFile(string, IDictionary&lt;string, string&gt;)', validate parameter 'js' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LoaderControlProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddToControl(System.Web.HttpContextBase,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LoaderControlProvider.cs" Line="123">In method 'LoaderControlProvider.AddToControl(HttpContextBase, string)', object 'dCtl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dCtl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegisterDependencies(System.Web.HttpContextBase,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LoaderControlProvider.cs" Line="118">In externally visible method 'LoaderControlProvider.RegisterDependencies(HttpContextBase, string, string)', validate parameter 'js' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LoaderControlProvider.cs" Line="117">In externally visible method 'LoaderControlProvider.RegisterDependencies(HttpContextBase, string, string)', validate parameter 'css' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderCssDependencies(System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Web.HttpContextBase,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LoaderControlProvider.cs" Line="71">In externally visible method 'LoaderControlProvider.RenderCssDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;)', validate parameter 'http' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderJsDependencies(System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Web.HttpContextBase,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LoaderControlProvider.cs" Line="38">In externally visible method 'LoaderControlProvider.RenderJsDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;)', validate parameter 'http' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderSingleCssFile(System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LoaderControlProvider.cs" Line="102">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'LoaderControlProvider.RenderSingleCssFile(string, IDictionary&lt;string, string&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderSingleJsFile(System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="LoaderControlProvider.cs" Line="97">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'LoaderControlProvider.RenderSingleJsFile(string, IDictionary&lt;string, string&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PageHeaderProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RegisterDependencies(System.Web.HttpContextBase,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PageHeaderProvider.cs" Line="124">In method 'PageHeaderProvider.RegisterDependencies(HttpContextBase, string, string)', object 'jsScriptBlock' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'jsScriptBlock' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Reserved" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PageHeaderProvider.cs" Line="122">'PageHeaderProvider.RegisterDependencies(HttpContextBase, string, string)' creates an exception of type 'NullReferenceException', an exception type that is reserved by the runtime and should never be raised by managed code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="HttpHandler" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PageHeaderProvider.cs" Line="117">Correct the spelling of the unrecognized token 'HttpHandler' in the literal '"The current HttpHandler in a WebFormsFileRegistrationProvider must be of type Pa..."'.</Issue>
            </Message>
            <Message Id="PageHeaderProvider" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PageHeaderProvider.cs" Line="122">Correct the spelling of the unrecognized token 'PageHeaderProvider' in the literal '"PageHeaderProvider requires a runat=\'server\' tag in the page\'s header tag"'.</Issue>
            </Message>
            <Message Id="WebFormsFileRegistrationProvider" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PageHeaderProvider.cs" Line="117">Correct the spelling of the unrecognized token 'WebFormsFileRegistrationProvider' in the literal '"The current HttpHandler in a WebFormsFileRegistrationProvider must be of type Pa..."'.</Issue>
            </Message>
            <Message Id="runat" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PageHeaderProvider.cs" Line="122">Correct the spelling of the unrecognized token 'runat' in the literal '"PageHeaderProvider requires a runat=\'server\' tag in the page\'s header tag"'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PageHeaderProvider.cs" Line="115">In externally visible method 'PageHeaderProvider.RegisterDependencies(HttpContextBase, string, string)', validate parameter 'http' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PageHeaderProvider.cs" Line="124">In externally visible method 'PageHeaderProvider.RegisterDependencies(HttpContextBase, string, string)', validate parameter 'js' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PageHeaderProvider.cs" Line="125">In externally visible method 'PageHeaderProvider.RegisterDependencies(HttpContextBase, string, string)', validate parameter 'css' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderCssDependencies(System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Web.HttpContextBase,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PageHeaderProvider.cs" Line="73">In externally visible method 'PageHeaderProvider.RenderCssDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;)', validate parameter 'http' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderJsDependencies(System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Web.HttpContextBase,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PageHeaderProvider.cs" Line="35">In externally visible method 'PageHeaderProvider.RenderJsDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;)', validate parameter 'http' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderSingleCssFile(System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PageHeaderProvider.cs" Line="99">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'PageHeaderProvider.RenderSingleCssFile(string, IDictionary&lt;string, string&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderSingleJsFile(System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PageHeaderProvider.cs" Line="61">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'PageHeaderProvider.RenderSingleJsFile(string, IDictionary&lt;string, string&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlaceHolderProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="PlaceHolder" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'PlaceHolder' in type name 'PlaceHolderProvider' exists as a discrete term. If your usage is intended to be single word, case it as 'Placeholder'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AddToControl(System.Web.HttpContextBase,System.String,System.Web.UI.Control)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="http" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PlaceHolderProvider.cs" Line="80">Parameter 'http' of 'PlaceHolderProvider.AddToControl(HttpContextBase, string, Control)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CssPlaceHolderId" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PlaceHolder" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PlaceHolderProvider.cs" Line="27">The compound word 'PlaceHolder' in member name 'PlaceHolderProvider.CssPlaceHolderId' exists as a discrete term. If your usage is intended to be single word, case it as 'Placeholder' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#JavaScriptPlaceHolderId" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PlaceHolder" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PlaceHolderProvider.cs" Line="26">The compound word 'PlaceHolder' in member name 'PlaceHolderProvider.JavaScriptPlaceHolderId' exists as a discrete term. If your usage is intended to be single word, case it as 'Placeholder' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegisterDependencies(System.Web.HttpContextBase,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Reserved" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PlaceHolderProvider.cs" Line="66">'PlaceHolderProvider.RegisterDependencies(HttpContextBase, string, string)' creates an exception of type 'NullReferenceException', an exception type that is reserved by the runtime and should never be raised by managed code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="Reserved" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PlaceHolderProvider.cs" Line="74">'PlaceHolderProvider.RegisterDependencies(HttpContextBase, string, string)' creates an exception of type 'NullReferenceException', an exception type that is reserved by the runtime and should never be raised by managed code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PlaceHolderProvider.cs" Line="68">In externally visible method 'PlaceHolderProvider.RegisterDependencies(HttpContextBase, string, string)', validate parameter 'js' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="PlaceHolderProvider.cs" Line="76">In externally visible method 'PlaceHolderProvider.RegisterDependencies(HttpContextBase, string, string)', validate parameter 'css' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RendererCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
           <Issue Certainty="90" Level="Error">'RendererCollection' appears to be a non-generic, strongly typed collection. Add an implementation to the instance of ICollection&lt;T&gt; where T is the underlying element type of 'RendererCollection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="StandardRenderer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RegisterDependencies(System.Collections.Generic.List`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Collections.Generic.HashSet`1&lt;ClientDependency.Core.IClientDependencyPath&gt;,System.String&amp;,System.String&amp;,System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="StandardRenderer.cs" Line="34">Change 'List&lt;IClientDependencyFile&gt;' in 'StandardRenderer.RegisterDependencies(List&lt;IClientDependencyFile&gt;, HashSet&lt;IClientDependencyPath&gt;, out string, out string, HttpContextBase)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Name="Reassigned" Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="StandardRenderer.cs" Line="37">In externally visible method 'StandardRenderer.RegisterDependencies(List&lt;IClientDependencyFile&gt;, HashSet&lt;IClientDependencyPath&gt;, out string, out string, HttpContextBase)', validate local variable ''(*jsOutput)'', which was reassigned from parameter 'jsOutput', before using it.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Name="Reassigned" Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="StandardRenderer.cs" Line="38">In externally visible method 'StandardRenderer.RegisterDependencies(List&lt;IClientDependencyFile&gt;, HashSet&lt;IClientDependencyPath&gt;, out string, out string, HttpContextBase)', validate local variable ''(*cssOutput)'', which was reassigned from parameter 'cssOutput', before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderCssDependencies(System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Web.HttpContextBase,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="StandardRenderer.cs" Line="83">In externally visible method 'StandardRenderer.RenderCssDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;)', validate parameter 'http' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderJsDependencies(System.Collections.Generic.IEnumerable`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Web.HttpContextBase,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="StandardRenderer.cs" Line="50">In externally visible method 'StandardRenderer.RenderJsDependencies(IEnumerable&lt;IClientDependencyFile&gt;, HttpContextBase, IDictionary&lt;string, string&gt;)', validate parameter 'http' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderSingleCssFile(System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="StandardRenderer.cs" Line="114">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'StandardRenderer.RenderSingleCssFile(string, IDictionary&lt;string, string&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderSingleJsFile(System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="StandardRenderer.cs" Line="109">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'StandardRenderer.RenderSingleJsFile(string, IDictionary&lt;string, string&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WebFormsFileRegistrationProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RegisterDependencies(System.Web.HttpContextBase,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="js" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'WebFormsFileRegistrationProvider.RegisterDependencies(HttpContextBase, string, string)', correct the spelling of 'js' in parameter name 'js' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegisterDependencies(System.Web.UI.Control,System.Collections.Generic.List`1&lt;ClientDependency.Core.IClientDependencyFile&gt;,System.Collections.Generic.HashSet`1&lt;ClientDependency.Core.IClientDependencyPath&gt;,System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="WebFormsFileRegistrationProvider.cs" Line="35">Change 'List&lt;IClientDependencyFile&gt;' in 'WebFormsFileRegistrationProvider.RegisterDependencies(Control, List&lt;IClientDependencyFile&gt;, HashSet&lt;IClientDependencyPath&gt;, HttpContextBase)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="dependant" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="WebFormsFileRegistrationProvider.cs" Line="35">In method 'WebFormsFileRegistrationProvider.RegisterDependencies(Control, List&lt;IClientDependencyFile&gt;, HashSet&lt;IClientDependencyPath&gt;, HttpContextBase)', correct the spelling of 'dependant' in parameter name 'dependantControl' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="dependantControl" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\FileRegistration\Providers" File="WebFormsFileRegistrationProvider.cs" Line="35">Parameter 'dependantControl' of 'WebFormsFileRegistrationProvider.RegisterDependencies(Control, List&lt;IClientDependencyFile&gt;, HashSet&lt;IClientDependencyPath&gt;, HttpContextBase)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ClientDependency.Core.Logging">
       <Types>
        <Type Name="ILogger" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Debug(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="msg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'ILogger.Debug(string)', correct the spelling of 'msg' in parameter name 'msg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Error(System.String,System.Exception)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="msg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'ILogger.Error(string, Exception)', correct the spelling of 'msg' in parameter name 'msg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Rename virtual/interface member 'ILogger.Error(string, Exception)' so that it no longer conflicts with the reserved language keyword 'Error'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Fatal(System.String,System.Exception)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="msg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'ILogger.Fatal(string, Exception)', correct the spelling of 'msg' in parameter name 'msg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Info(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="msg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'ILogger.Info(string)', correct the spelling of 'msg' in parameter name 'msg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Warn(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="msg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'ILogger.Warn(string)', correct the spelling of 'msg' in parameter name 'msg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TraceLogger" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#GetHttpContext()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Logging" File="TraceLogger.cs" Line="9">The 'this' parameter (or 'Me' in Visual Basic) of 'TraceLogger.GetHttpContext()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ClientDependency.Core.Module">
       <Types>
        <Type Name="ClientDependencyModule" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#System.Web.IHttpModule.Dispose()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Module" File="ClientDependencyModule.cs" Line="27">Make 'ClientDependencyModule' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'IHttpModule.Dispose()' and is visible to derived classes.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.Web.IHttpModule.Init(System.Web.HttpApplication)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Module" File="ClientDependencyModule.cs" Line="34">Make 'ClientDependencyModule' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'IHttpModule.Init(HttpApplication)' and is visible to derived classes.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Module" File="ClientDependencyModule.cs" Line="38">In externally visible method 'ClientDependencyModule.IHttpModule.Init(HttpApplication)', validate parameter 'app' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IFilter" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SetHttpContext(System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ctx" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'IFilter.SetHttpContext(HttpContextBase)', correct the spelling of 'ctx' in parameter name 'ctx' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MimeTypeCompressor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ctx" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Module" File="MimeTypeCompressor.cs" Line="14">In method 'MimeTypeCompressor.MimeTypeCompressor(HttpContextBase)', correct the spelling of 'ctx' in parameter name 'ctx' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Module" File="MimeTypeCompressor.cs" Line="22">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'MimeTypeCompressor.MimeTypeCompressor(HttpContextBase)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Module" File="MimeTypeCompressor.cs" Line="22">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'MimeTypeCompressor.MimeTypeCompressor(HttpContextBase)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddCompression()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Module" File="MimeTypeCompressor.cs" Line="43">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'MimeTypeCompressor.AddCompression()' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Context" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MimeTypeCompressor.Context' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSupportedPath()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Module" File="MimeTypeCompressor.cs" Line="77">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'MimeTypeCompressor.GetSupportedPath()' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Module" File="MimeTypeCompressor.cs" Line="71">Change 'MimeTypeCompressor.GetSupportedPath()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MatchedTypes" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MimeTypeCompressor.MatchedTypes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ResponseFilterStream" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Module" File="ResponseFilterStream.cs" Line="323">Object 'this' can be disposed more than once in method 'ResponseFilterStream.Dispose()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 323</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Module" File="ResponseFilterStream.cs" Line="321">Modify 'ResponseFilterStream.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
             <Issue Name="DisposeSignature" Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Module" File="ResponseFilterStream.cs" Line="321">Ensure that 'ResponseFilterStream.Dispose()' is declared as public and sealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnCaptureStream(System.IO.MemoryStream)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ms" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Module" File="ResponseFilterStream.cs" Line="159">In method 'ResponseFilterStream.OnCaptureStream(MemoryStream)', correct the spelling of 'ms' in parameter name 'ms' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnTransformCompleteStream(System.IO.MemoryStream)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ms" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Module" File="ResponseFilterStream.cs" Line="203">In method 'ResponseFilterStream.OnTransformCompleteStream(MemoryStream)', correct the spelling of 'ms' in parameter name 'ms' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnTransformCompleteString(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Module" File="ResponseFilterStream.cs" Line="224">'ResponseFilterStream.OnTransformCompleteString(string)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnTransformCompleteStringInternal(System.IO.MemoryStream)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Module" File="ResponseFilterStream.cs" Line="247">In method 'ResponseFilterStream.OnTransformCompleteStringInternal(MemoryStream)', object 'ms' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ms' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Seek(System.Int64,System.IO.SeekOrigin)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Module" File="ResponseFilterStream.cs" Line="298">In member 'ResponseFilterStream.Seek(long, SeekOrigin)', change parameter name 'direction' to 'origin' in order to match the identifier as it has been declared in 'Stream.Seek(long, SeekOrigin)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetLength(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Module" File="ResponseFilterStream.cs" Line="307">In member 'ResponseFilterStream.SetLength(long)', change parameter name 'length' to 'value' in order to match the identifier as it has been declared in 'Stream.SetLength(long)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CaptureStream" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Action&lt;MemoryStream&gt;' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Action&lt;MemoryStream&gt;' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'Action&lt;MemoryStream&gt;' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CaptureString" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Action&lt;string&gt;' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Action&lt;string&gt;' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'Action&lt;string&gt;' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TransformStream" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Func&lt;MemoryStream, MemoryStream&gt;' as an object named 'sender'.</Issue>
             <Issue Name="Return" Certainty="95" Level="Error">Change 'Func&lt;MemoryStream, MemoryStream&gt;' to return void.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Func&lt;MemoryStream, MemoryStream&gt;' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'Func&lt;MemoryStream, MemoryStream&gt;' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TransformString" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Func&lt;string, string&gt;' as an object named 'sender'.</Issue>
             <Issue Name="Return" Certainty="95" Level="Error">Change 'Func&lt;string, string&gt;' to return void.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Func&lt;string, string&gt;' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'Func&lt;string, string&gt;' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TransformWrite" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Func&lt;byte[], byte[]&gt;' as an object named 'sender'.</Issue>
             <Issue Name="Return" Certainty="95" Level="Error">Change 'Func&lt;byte[], byte[]&gt;' to return void.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Func&lt;byte[], byte[]&gt;' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'Func&lt;byte[], byte[]&gt;' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TransformWriteString" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Func&lt;string, string&gt;' as an object named 'sender'.</Issue>
             <Issue Name="Return" Certainty="95" Level="Error">Change 'Func&lt;string, string&gt;' to return void.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Func&lt;string, string&gt;' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'Func&lt;string, string&gt;' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RogueFileFilter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ReplaceContent(System.String,System.String,System.String[],ClientDependency.Core.ClientDependencyType,System.String,System.Web.HttpContextBase)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-01-26 23:30:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\radal\Desktop\DNN_Platform_9.1.1.129-232_Source\Dnn.Platform\DNN Platform\Components\ClientDependency\Source\Module" File="RogueFileFilter.cs" Line="169">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'RogueFileFilter.ReplaceContent(string, string, string[], ClientDependencyType, string, HttpContextBase)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>Avoid excessive complexity</Name>
   <Description>Method implementations that are exceedingly complex increase the challenge of understanding and maintaining code.</Description>
   <Resolution Name="Default">{0} has a cyclomatic complexity of {1}. Rewrite or refactor the method to reduce complexity to {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182212.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021">
   <Name>Avoid out parameters</Name>
   <Description>Using out parameters might indicate a design flaw. Although there are legitimate times to use out parameters, their use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be an out parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182131.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813">
   <Name>Avoid unsealed attributes</Name>
   <Description>Seal attribute types for improved performance. Sealing attribute types speeds up performance during reflection on custom attributes.</Description>
   <Resolution Name="Default">Seal {0}, if possible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182267.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227">
   <Name>Collection properties should be read only</Name>
   <Description>Properties that return collections should be read-only so that users cannot entirely replace the backing store. Users can still modify the contents of the collection by calling relevant methods on the collection. Note that the XmlSerializer class has special support for deserializing read-only collections. See the XmlSerializer overview for more information.</Description>
   <Resolution Name="Default">Change {0} to be read-only by removing the property setter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182327.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010">
   <Name>Collections should implement generic interface</Name>
   <Description>Non-generic strongly typed collections should implement one of the generic collection interfaces. This will allow better integration of the collection with generic API.</Description>
   <Resolution Name="Default">{0} appears to be a non-generic, strongly typed collection. Add an implementation to the instance of {1}&lt;T&gt; where T is the underlying element type of {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182132.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberShouldBeCompoundWord">The discrete term '{0}' in member name {1} should be expressed as a compound word, '{2}'.</Resolution>
   <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="TypeShouldBeCompoundWord">The discrete term '{0}' in type name {1} should be expressed as a compound word, '{2}'.</Resolution>
   <Resolution Name="TypeShouldBeDiscreteTerm">The compound word '{0}' in type name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011">
   <Name>Consider passing base types as parameters</Name>
   <Description>Using base types as parameters to methods improves re-use of these methods if you only use methods &amp; properties from the parameter's base class. E.g. use Stream instead of FileStream as a parameter when only calling Stream.Read(), this makes the method work on all kind of streams instead of just File streams.</Description>
   <Resolution Name="Default">Consider changing the type of parameter {0} in {1} from {2} to its base type {3}. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/3hk32yyz.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Declare event handlers correctly</Name>
   <Description>By convention, .NET events have two parameters that specify the event sender and event data. Event handler signatures should follow this form: void MyEventHandler(object sender, EventArgs e). The 'sender' parameter is always of type System.Object, even if it is possible to employ a more specific type. The 'e' parameter is always of type System.EventArgs. Events that do not provide event data should use the System.EventHandler delegate type. Event handlers return void so that they can send each event to multiple target methods. Any value returned by a target would be lost after the first call.</Description>
   <Resolution Name="First">Declare the first parameter of {0} as an object named 'sender'.</Resolution>
   <Resolution Name="Return">Change {0} to return void.</Resolution>
   <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182133.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
   <Name>Default parameters should not be used</Name>
   <Description>Some programming languages do not support default parameters. Replace default parameters with method overloads that supply the default argument.</Description>
   <Resolution Name="Default">Replace method {0} with an overload that supplies all default arguments.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182135.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019">
   <Name>Define accessors for attribute arguments</Name>
   <Description>Provide accessors for both named and positional arguments. Each positional argument on an attribute should declare a read-only property with the same name (but different casing). Each named argument should provide a read/write property with the same name (but different casing).</Description>
   <Resolution Name="Default">Add a public read-only property accessor for positional argument {0} of Attribute {1}.</Resolution>
   <Resolution Name="RemoveSetter">Remove the property setter from {0} or reduce its accessibility because it corresponds to positional argument {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182136.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 83</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
   <Name>Do not call overridable methods in constructors</Name>
   <Description>Virtual methods defined on the class should not be called from constructors. If a derived class has overridden the method, the derived class version will be called (before the derived class constructor is called).</Description>
   <Resolution Name="Default">{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182331.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
   <Name>Do not cast unnecessarily</Name>
   <Description>Avoid duplicate casts where possible, since there is a cost associated with them.</Description>
   <Resolution Name="Local">{0}, a variable, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Resolution Name="Parameter">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182271.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006">
   <Name>Do not nest generic types in member signatures</Name>
   <Description>Avoid API that require users to instantiate a generic type with another generic type as type argument. The syntax gets too complex.</Description>
   <Resolution Name="Default">Consider a design where {0} doesn't nest generic type {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182144.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065">
   <Name>Do not raise exceptions in unexpected locations</Name>
   <Description>Do not explicitly raise exceptions from unexpected locations. There are some methods, such as Equals and GetHashCode, which users do not expect to raise exceptions. Therefore calls to these methods are not commonly wrapped in try catch blocks.</Description>
   <Resolution Name="PropertyGetter">{0} creates an exception of type {1}, an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386039.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error, Warning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>Do not raise reserved exception types</Name>
   <Description>User code should not create and raise exceptions of certain types that are reserved by the runtime or which are of a too general exception type. Exception types that are too general include Exception, SystemException, and ApplicationException. Exception types that are reserved by the runtime include ThreadAbortException, OutOfMemoryException, ExecutionEngineException, and IndexOutOfRangeException.</Description>
   <Resolution Name="Reserved">{0} creates an exception of type {1}, an exception type that is reserved by the runtime and should never be raised by managed code. If this exception instance might be thrown, use a different exception type.</Resolution>
   <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182338.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004">
   <Name>Generic methods should provide type parameter</Name>
   <Description>Methods where the type parameter cannot be inferred from the parameters and therefore has to be defined in the method call are too difficult to understand. Methods with a formal parameter typed as the generic method type parameter support inference. Methods with no formal parameter typed as the generic method type parameter don't support inference.</Description>
   <Resolution Name="Default">Consider a design where {0} doesn't require explicit type parameter {1} in any call to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182150.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710">
   <Name>Identifiers should have correct suffix</Name>
   <Description>Types that extend certain base types have specified name suffixes. Types that extend Attribute, for example, should be suffixed in 'Attribute', as in ObsoleteAttribute. This rules checks types that extend several base types, including Attribute, Exception, EventArgs, IMembershipPermission, Stream, and others.</Description>
   <Resolution Name="Default">Rename {0} to end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182244.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageIndependentMemberParameter">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711">
   <Name>Identifiers should not have incorrect suffix</Name>
   <Description>Types that do not extend certain base types should not use reserved name suffixes. Types and members should not use 'Ex' or 'New' to distinguish them from an earlier version of the same API, instead, use a numeric suffix such as '2' or provide a more meaningful suffix. Concrete type implementations and members should not end 'Impl'. Members instead, should either consider using the suggested alternate 'Core' in replacement of 'Impl' or avoid any suffix at all.</Description>
   <Resolution Name="TypeNoAlternate">Rename type name {0} so that it does not end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182247.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716">
   <Name>Identifiers should not match keywords</Name>
   <Description>Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</Description>
   <Resolution Name="Member">Rename virtual/interface member {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Resolution>
   <Resolution Name="Namespace">Rename namespace {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a namespace makes it harder for consumers in other languages to use the namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182248.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
   <Name>Implement IDisposable correctly</Name>
   <Description>All IDisposable types should implement the Dispose pattern correctly.</Description>
   <Resolution Name="DisposeImplementation">Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Resolution>
   <Resolution Name="DisposeSignature">Ensure that {0} is declared as public and sealed.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms244737.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
   <Name>Initialize reference type static fields inline</Name>
   <Description>Static fields should be initialized when declared. Initializing static data in explicit static constructors results in less performant code.</Description>
   <Resolution Name="Default">Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182275.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">CriticalWarning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208">
   <Name>Instantiate argument exceptions correctly</Name>
   <Description>String arguments passed to constructors of ArgumentException and its derived types should be correct. Types derived from ArgumentException have inconsistent constructor overloads with respect to the message and paramName parameters as compared to ArgumentException.</Description>
   <Resolution Name="IncorrectParameterName">Method {0} passes '{1}' as the {2} argument to a {3} constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Resolution>
   <Resolution Name="NoArguments">Call the {0} constructor that contains a message and/or paramName parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182347.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033">
   <Name>Interface methods should be callable by child types</Name>
   <Description>Explicit method implementations are defined with private accessibility. Classes that derive from classes with explicit method implementations and choose to re-declare them on the class will not be able to call into the base class implementation unless the base class has provided an alternate method with appropriate accessibility. When overriding a base class method that has been hidden by explicit interface implementation, in order to call into the base class implementation, a derived class must cast the base pointer to the relevant interface. When calling through this reference, however, the derived class implementation will actually be invoked, resulting in recursion and an eventual stack overflow.</Description>
   <Resolution Name="Default">Make {0} sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of {1} and is visible to derived classes.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182153.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithAssemblyVersion" Category="Microsoft.Design" CheckId="CA1016">
   <Name>Mark assemblies with AssemblyVersionAttribute</Name>
   <Description>Assemblies should use version numbers. The version number is considered part of an assembly's identity. Versioning is applied by means of the AssemblyVersion attribute.</Description>
   <Resolution Name="Default">Add an AssemblyVersion attribute to {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182155.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211">
   <Name>Non-constant fields should not be visible</Name>
   <Description>Static fields should be constant unless you carefully manage access to the field using locks. Using static variables without making them thread safe can compromise execution state. This rule applies to managed code libraries. If the analyzed assembly is an application, it is usually safe to exclude violations of this rule.</Description>
   <Resolution Name="Default">Consider making {0} non-public or a constant.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182353.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308">
   <Name>Normalize strings to uppercase</Name>
   <Description>Strings should be normalized to upper-case.</Description>
   <Resolution Name="ToUpperInvariant">In method {0}, replace the call to {1} with String.ToUpperInvariant().</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725">
   <Name>Parameter names should match base declaration</Name>
   <Description>For usability reasons, parameter names in overridden methods should match those of the base declaration.</Description>
   <Resolution Name="Default">In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182251.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
   <Name>Specify CultureInfo</Name>
   <Description>If an overload exists that takes a CultureInfo argument, it should always be called in favor of an overload that does not. The CultureInfo type contains culture-specific information required for performing numeric and string operations, such as casing, formatting, and string comparisons. In scenarios where conversion and parsing behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182189.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>Specify StringComparison</Name>
   <Description>If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
   <Name>Static holder types should not have constructors</Name>
   <Description>Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</Description>
   <Resolution Name="Default">Because type {0} contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182169.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>Test for empty strings using string length</Name>
   <Description>To test for empty strings, check if String.Length is equal to zero. Constructs such as "".Equals(someString) and String.Empty.Equals(someString) are less efficient than testing the string length. Replace these with checks for someString.Length == 0.</Description>
   <Resolution Name="IsNullOrEmpty">Replace the call to {0} in {1} with a call to 'String.IsNullOrEmpty'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054">
   <Name>URI parameters should not be strings</Name>
   <Description>If a parameter name contains "uri" or "url" or "urn", and it's typed as string, the parameter type should be changed to System.Uri, unless there is an overload method where the same parameter is typed as System.Uri.</Description>
   <Resolution Name="Default">Change the type of parameter {0} of method {1} from string to System.Uri, or provide an overload of {1}, that allows {0} to be passed as a System.Uri object.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182174.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056">
   <Name>URI properties should not be strings</Name>
   <Description>If a property name contains "uri" or "url" or "urn" and it's typed as string, it should be changed to System.Uri.</Description>
   <Resolution Name="Default">Change the type of property {0} from string to System.Uri.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182175.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055">
   <Name>URI return values should not be strings</Name>
   <Description>If a function name contains "uri" or "url" or "urn" and the return type is string, the return type should be changed to System.Uri.</Description>
   <Resolution Name="Default">Change the return type of {0} from string to System.Uri.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182176.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309">
   <Name>Use ordinal StringComparison</Name>
   <Description>For non-linguistic comparisons, StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase should be used instead of the linguistically-sensitive StringComparison.InvariantCulture.</Description>
   <Resolution Name="StringComparison">{0} passes '{1}' as the 'StringComparison' parameter to {2}. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385972.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Resolution Name="Reassigned">In externally visible method {0}, validate local variable '{1}', which was reassigned from parameter '{2}', before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
